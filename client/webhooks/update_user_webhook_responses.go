// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// UpdateUserWebhookReader is a Reader for the UpdateUserWebhook structure.
type UpdateUserWebhookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserWebhookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateUserWebhookNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUserWebhookBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateUserWebhookUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateUserWebhookTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUserWebhookInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateUserWebhookNoContent creates a UpdateUserWebhookNoContent with default headers values
func NewUpdateUserWebhookNoContent() *UpdateUserWebhookNoContent {
	return &UpdateUserWebhookNoContent{}
}

/*
UpdateUserWebhookNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type UpdateUserWebhookNoContent struct {
}

// IsSuccess returns true when this update user webhook no content response has a 2xx status code
func (o *UpdateUserWebhookNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update user webhook no content response has a 3xx status code
func (o *UpdateUserWebhookNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user webhook no content response has a 4xx status code
func (o *UpdateUserWebhookNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user webhook no content response has a 5xx status code
func (o *UpdateUserWebhookNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update user webhook no content response a status code equal to that given
func (o *UpdateUserWebhookNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateUserWebhookNoContent) Error() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookNoContent ", 204)
}

func (o *UpdateUserWebhookNoContent) String() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookNoContent ", 204)
}

func (o *UpdateUserWebhookNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserWebhookBadRequest creates a UpdateUserWebhookBadRequest with default headers values
func NewUpdateUserWebhookBadRequest() *UpdateUserWebhookBadRequest {
	return &UpdateUserWebhookBadRequest{}
}

/*
UpdateUserWebhookBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type UpdateUserWebhookBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update user webhook bad request response has a 2xx status code
func (o *UpdateUserWebhookBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user webhook bad request response has a 3xx status code
func (o *UpdateUserWebhookBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user webhook bad request response has a 4xx status code
func (o *UpdateUserWebhookBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user webhook bad request response has a 5xx status code
func (o *UpdateUserWebhookBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update user webhook bad request response a status code equal to that given
func (o *UpdateUserWebhookBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateUserWebhookBadRequest) Error() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserWebhookBadRequest) String() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserWebhookBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateUserWebhookBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserWebhookUnauthorized creates a UpdateUserWebhookUnauthorized with default headers values
func NewUpdateUserWebhookUnauthorized() *UpdateUserWebhookUnauthorized {
	return &UpdateUserWebhookUnauthorized{}
}

/*
UpdateUserWebhookUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type UpdateUserWebhookUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update user webhook unauthorized response has a 2xx status code
func (o *UpdateUserWebhookUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user webhook unauthorized response has a 3xx status code
func (o *UpdateUserWebhookUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user webhook unauthorized response has a 4xx status code
func (o *UpdateUserWebhookUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user webhook unauthorized response has a 5xx status code
func (o *UpdateUserWebhookUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update user webhook unauthorized response a status code equal to that given
func (o *UpdateUserWebhookUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateUserWebhookUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserWebhookUnauthorized) String() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserWebhookUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateUserWebhookUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserWebhookTooManyRequests creates a UpdateUserWebhookTooManyRequests with default headers values
func NewUpdateUserWebhookTooManyRequests() *UpdateUserWebhookTooManyRequests {
	return &UpdateUserWebhookTooManyRequests{}
}

/*
UpdateUserWebhookTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type UpdateUserWebhookTooManyRequests struct {
}

// IsSuccess returns true when this update user webhook too many requests response has a 2xx status code
func (o *UpdateUserWebhookTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user webhook too many requests response has a 3xx status code
func (o *UpdateUserWebhookTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user webhook too many requests response has a 4xx status code
func (o *UpdateUserWebhookTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user webhook too many requests response has a 5xx status code
func (o *UpdateUserWebhookTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update user webhook too many requests response a status code equal to that given
func (o *UpdateUserWebhookTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *UpdateUserWebhookTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookTooManyRequests ", 429)
}

func (o *UpdateUserWebhookTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookTooManyRequests ", 429)
}

func (o *UpdateUserWebhookTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserWebhookInternalServerError creates a UpdateUserWebhookInternalServerError with default headers values
func NewUpdateUserWebhookInternalServerError() *UpdateUserWebhookInternalServerError {
	return &UpdateUserWebhookInternalServerError{}
}

/*
UpdateUserWebhookInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type UpdateUserWebhookInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update user webhook internal server error response has a 2xx status code
func (o *UpdateUserWebhookInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user webhook internal server error response has a 3xx status code
func (o *UpdateUserWebhookInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user webhook internal server error response has a 4xx status code
func (o *UpdateUserWebhookInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user webhook internal server error response has a 5xx status code
func (o *UpdateUserWebhookInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update user webhook internal server error response a status code equal to that given
func (o *UpdateUserWebhookInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateUserWebhookInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserWebhookInternalServerError) String() string {
	return fmt.Sprintf("[PUT /webhooks/user/{webhookID}][%d] updateUserWebhookInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserWebhookInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateUserWebhookInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
