// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// SearchPackagesReader is a Reader for the SearchPackages structure.
type SearchPackagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchPackagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchPackagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchPackagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSearchPackagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchPackagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchPackagesOK creates a SearchPackagesOK with default headers values
func NewSearchPackagesOK() *SearchPackagesOK {
	return &SearchPackagesOK{}
}

/*
SearchPackagesOK describes a response with status code 200, with default header values.

SearchPackagesOK search packages o k
*/
type SearchPackagesOK struct {

	/* Total number of packages for this search
	 */
	PaginationTotalCount string

	Payload *models.PackagesSearchResponse
}

// IsSuccess returns true when this search packages o k response has a 2xx status code
func (o *SearchPackagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search packages o k response has a 3xx status code
func (o *SearchPackagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages o k response has a 4xx status code
func (o *SearchPackagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search packages o k response has a 5xx status code
func (o *SearchPackagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search packages o k response a status code equal to that given
func (o *SearchPackagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchPackagesOK) Error() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesOK  %+v", 200, o.Payload)
}

func (o *SearchPackagesOK) String() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesOK  %+v", 200, o.Payload)
}

func (o *SearchPackagesOK) GetPayload() *models.PackagesSearchResponse {
	return o.Payload
}

func (o *SearchPackagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Pagination-Total-Count
	hdrPaginationTotalCount := response.GetHeader("Pagination-Total-Count")

	if hdrPaginationTotalCount != "" {
		o.PaginationTotalCount = hdrPaginationTotalCount
	}

	o.Payload = new(models.PackagesSearchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPackagesBadRequest creates a SearchPackagesBadRequest with default headers values
func NewSearchPackagesBadRequest() *SearchPackagesBadRequest {
	return &SearchPackagesBadRequest{}
}

/*
SearchPackagesBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type SearchPackagesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this search packages bad request response has a 2xx status code
func (o *SearchPackagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search packages bad request response has a 3xx status code
func (o *SearchPackagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages bad request response has a 4xx status code
func (o *SearchPackagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search packages bad request response has a 5xx status code
func (o *SearchPackagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search packages bad request response a status code equal to that given
func (o *SearchPackagesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchPackagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchPackagesBadRequest) String() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchPackagesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchPackagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPackagesTooManyRequests creates a SearchPackagesTooManyRequests with default headers values
func NewSearchPackagesTooManyRequests() *SearchPackagesTooManyRequests {
	return &SearchPackagesTooManyRequests{}
}

/*
SearchPackagesTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type SearchPackagesTooManyRequests struct {
}

// IsSuccess returns true when this search packages too many requests response has a 2xx status code
func (o *SearchPackagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search packages too many requests response has a 3xx status code
func (o *SearchPackagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages too many requests response has a 4xx status code
func (o *SearchPackagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this search packages too many requests response has a 5xx status code
func (o *SearchPackagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this search packages too many requests response a status code equal to that given
func (o *SearchPackagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *SearchPackagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesTooManyRequests ", 429)
}

func (o *SearchPackagesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesTooManyRequests ", 429)
}

func (o *SearchPackagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchPackagesInternalServerError creates a SearchPackagesInternalServerError with default headers values
func NewSearchPackagesInternalServerError() *SearchPackagesInternalServerError {
	return &SearchPackagesInternalServerError{}
}

/*
SearchPackagesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type SearchPackagesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this search packages internal server error response has a 2xx status code
func (o *SearchPackagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search packages internal server error response has a 3xx status code
func (o *SearchPackagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages internal server error response has a 4xx status code
func (o *SearchPackagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search packages internal server error response has a 5xx status code
func (o *SearchPackagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search packages internal server error response a status code equal to that given
func (o *SearchPackagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SearchPackagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchPackagesInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/search][%d] searchPackagesInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchPackagesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchPackagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
