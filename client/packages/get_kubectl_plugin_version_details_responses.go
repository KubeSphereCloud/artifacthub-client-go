// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetKubectlPluginVersionDetailsReader is a Reader for the GetKubectlPluginVersionDetails structure.
type GetKubectlPluginVersionDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubectlPluginVersionDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubectlPluginVersionDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetKubectlPluginVersionDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKubectlPluginVersionDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKubectlPluginVersionDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKubectlPluginVersionDetailsOK creates a GetKubectlPluginVersionDetailsOK with default headers values
func NewGetKubectlPluginVersionDetailsOK() *GetKubectlPluginVersionDetailsOK {
	return &GetKubectlPluginVersionDetailsOK{}
}

/*
GetKubectlPluginVersionDetailsOK describes a response with status code 200, with default header values.

GetKubectlPluginVersionDetailsOK get kubectl plugin version details o k
*/
type GetKubectlPluginVersionDetailsOK struct {
	Payload *models.KrewPluginsPackage
}

// IsSuccess returns true when this get kubectl plugin version details o k response has a 2xx status code
func (o *GetKubectlPluginVersionDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kubectl plugin version details o k response has a 3xx status code
func (o *GetKubectlPluginVersionDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin version details o k response has a 4xx status code
func (o *GetKubectlPluginVersionDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubectl plugin version details o k response has a 5xx status code
func (o *GetKubectlPluginVersionDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubectl plugin version details o k response a status code equal to that given
func (o *GetKubectlPluginVersionDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKubectlPluginVersionDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKubectlPluginVersionDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKubectlPluginVersionDetailsOK) GetPayload() *models.KrewPluginsPackage {
	return o.Payload
}

func (o *GetKubectlPluginVersionDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KrewPluginsPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubectlPluginVersionDetailsNotFound creates a GetKubectlPluginVersionDetailsNotFound with default headers values
func NewGetKubectlPluginVersionDetailsNotFound() *GetKubectlPluginVersionDetailsNotFound {
	return &GetKubectlPluginVersionDetailsNotFound{}
}

/*
GetKubectlPluginVersionDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetKubectlPluginVersionDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get kubectl plugin version details not found response has a 2xx status code
func (o *GetKubectlPluginVersionDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubectl plugin version details not found response has a 3xx status code
func (o *GetKubectlPluginVersionDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin version details not found response has a 4xx status code
func (o *GetKubectlPluginVersionDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubectl plugin version details not found response has a 5xx status code
func (o *GetKubectlPluginVersionDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubectl plugin version details not found response a status code equal to that given
func (o *GetKubectlPluginVersionDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKubectlPluginVersionDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKubectlPluginVersionDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKubectlPluginVersionDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKubectlPluginVersionDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubectlPluginVersionDetailsTooManyRequests creates a GetKubectlPluginVersionDetailsTooManyRequests with default headers values
func NewGetKubectlPluginVersionDetailsTooManyRequests() *GetKubectlPluginVersionDetailsTooManyRequests {
	return &GetKubectlPluginVersionDetailsTooManyRequests{}
}

/*
GetKubectlPluginVersionDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetKubectlPluginVersionDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get kubectl plugin version details too many requests response has a 2xx status code
func (o *GetKubectlPluginVersionDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubectl plugin version details too many requests response has a 3xx status code
func (o *GetKubectlPluginVersionDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin version details too many requests response has a 4xx status code
func (o *GetKubectlPluginVersionDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubectl plugin version details too many requests response has a 5xx status code
func (o *GetKubectlPluginVersionDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubectl plugin version details too many requests response a status code equal to that given
func (o *GetKubectlPluginVersionDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKubectlPluginVersionDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsTooManyRequests ", 429)
}

func (o *GetKubectlPluginVersionDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsTooManyRequests ", 429)
}

func (o *GetKubectlPluginVersionDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubectlPluginVersionDetailsInternalServerError creates a GetKubectlPluginVersionDetailsInternalServerError with default headers values
func NewGetKubectlPluginVersionDetailsInternalServerError() *GetKubectlPluginVersionDetailsInternalServerError {
	return &GetKubectlPluginVersionDetailsInternalServerError{}
}

/*
GetKubectlPluginVersionDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetKubectlPluginVersionDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get kubectl plugin version details internal server error response has a 2xx status code
func (o *GetKubectlPluginVersionDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubectl plugin version details internal server error response has a 3xx status code
func (o *GetKubectlPluginVersionDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin version details internal server error response has a 4xx status code
func (o *GetKubectlPluginVersionDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubectl plugin version details internal server error response has a 5xx status code
func (o *GetKubectlPluginVersionDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get kubectl plugin version details internal server error response a status code equal to that given
func (o *GetKubectlPluginVersionDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKubectlPluginVersionDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKubectlPluginVersionDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}/{version}][%d] getKubectlPluginVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKubectlPluginVersionDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKubectlPluginVersionDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
