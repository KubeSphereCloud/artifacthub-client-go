// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetTektonPipelineVersionDetailsReader is a Reader for the GetTektonPipelineVersionDetails structure.
type GetTektonPipelineVersionDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTektonPipelineVersionDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTektonPipelineVersionDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTektonPipelineVersionDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTektonPipelineVersionDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTektonPipelineVersionDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTektonPipelineVersionDetailsOK creates a GetTektonPipelineVersionDetailsOK with default headers values
func NewGetTektonPipelineVersionDetailsOK() *GetTektonPipelineVersionDetailsOK {
	return &GetTektonPipelineVersionDetailsOK{}
}

/*
GetTektonPipelineVersionDetailsOK describes a response with status code 200, with default header values.

GetTektonPipelineVersionDetailsOK get tekton pipeline version details o k
*/
type GetTektonPipelineVersionDetailsOK struct {
	Payload *models.TektonPipelinePackage
}

// IsSuccess returns true when this get tekton pipeline version details o k response has a 2xx status code
func (o *GetTektonPipelineVersionDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tekton pipeline version details o k response has a 3xx status code
func (o *GetTektonPipelineVersionDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline version details o k response has a 4xx status code
func (o *GetTektonPipelineVersionDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tekton pipeline version details o k response has a 5xx status code
func (o *GetTektonPipelineVersionDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline version details o k response a status code equal to that given
func (o *GetTektonPipelineVersionDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTektonPipelineVersionDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetTektonPipelineVersionDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetTektonPipelineVersionDetailsOK) GetPayload() *models.TektonPipelinePackage {
	return o.Payload
}

func (o *GetTektonPipelineVersionDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TektonPipelinePackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTektonPipelineVersionDetailsNotFound creates a GetTektonPipelineVersionDetailsNotFound with default headers values
func NewGetTektonPipelineVersionDetailsNotFound() *GetTektonPipelineVersionDetailsNotFound {
	return &GetTektonPipelineVersionDetailsNotFound{}
}

/*
GetTektonPipelineVersionDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetTektonPipelineVersionDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tekton pipeline version details not found response has a 2xx status code
func (o *GetTektonPipelineVersionDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline version details not found response has a 3xx status code
func (o *GetTektonPipelineVersionDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline version details not found response has a 4xx status code
func (o *GetTektonPipelineVersionDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline version details not found response has a 5xx status code
func (o *GetTektonPipelineVersionDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline version details not found response a status code equal to that given
func (o *GetTektonPipelineVersionDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTektonPipelineVersionDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetTektonPipelineVersionDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetTektonPipelineVersionDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTektonPipelineVersionDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTektonPipelineVersionDetailsTooManyRequests creates a GetTektonPipelineVersionDetailsTooManyRequests with default headers values
func NewGetTektonPipelineVersionDetailsTooManyRequests() *GetTektonPipelineVersionDetailsTooManyRequests {
	return &GetTektonPipelineVersionDetailsTooManyRequests{}
}

/*
GetTektonPipelineVersionDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetTektonPipelineVersionDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get tekton pipeline version details too many requests response has a 2xx status code
func (o *GetTektonPipelineVersionDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline version details too many requests response has a 3xx status code
func (o *GetTektonPipelineVersionDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline version details too many requests response has a 4xx status code
func (o *GetTektonPipelineVersionDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton pipeline version details too many requests response has a 5xx status code
func (o *GetTektonPipelineVersionDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton pipeline version details too many requests response a status code equal to that given
func (o *GetTektonPipelineVersionDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetTektonPipelineVersionDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsTooManyRequests ", 429)
}

func (o *GetTektonPipelineVersionDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsTooManyRequests ", 429)
}

func (o *GetTektonPipelineVersionDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTektonPipelineVersionDetailsInternalServerError creates a GetTektonPipelineVersionDetailsInternalServerError with default headers values
func NewGetTektonPipelineVersionDetailsInternalServerError() *GetTektonPipelineVersionDetailsInternalServerError {
	return &GetTektonPipelineVersionDetailsInternalServerError{}
}

/*
GetTektonPipelineVersionDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetTektonPipelineVersionDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tekton pipeline version details internal server error response has a 2xx status code
func (o *GetTektonPipelineVersionDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton pipeline version details internal server error response has a 3xx status code
func (o *GetTektonPipelineVersionDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton pipeline version details internal server error response has a 4xx status code
func (o *GetTektonPipelineVersionDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tekton pipeline version details internal server error response has a 5xx status code
func (o *GetTektonPipelineVersionDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tekton pipeline version details internal server error response a status code equal to that given
func (o *GetTektonPipelineVersionDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTektonPipelineVersionDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTektonPipelineVersionDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/tekton-pipeline/{repoName}/{packageName}/{version}][%d] getTektonPipelineVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTektonPipelineVersionDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTektonPipelineVersionDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
