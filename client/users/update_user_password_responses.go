// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// UpdateUserPasswordReader is a Reader for the UpdateUserPassword structure.
type UpdateUserPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateUserPasswordNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateUserPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateUserPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateUserPasswordTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUserPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateUserPasswordNoContent creates a UpdateUserPasswordNoContent with default headers values
func NewUpdateUserPasswordNoContent() *UpdateUserPasswordNoContent {
	return &UpdateUserPasswordNoContent{}
}

/*
UpdateUserPasswordNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type UpdateUserPasswordNoContent struct {
}

// IsSuccess returns true when this update user password no content response has a 2xx status code
func (o *UpdateUserPasswordNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update user password no content response has a 3xx status code
func (o *UpdateUserPasswordNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user password no content response has a 4xx status code
func (o *UpdateUserPasswordNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user password no content response has a 5xx status code
func (o *UpdateUserPasswordNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update user password no content response a status code equal to that given
func (o *UpdateUserPasswordNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateUserPasswordNoContent) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordNoContent ", 204)
}

func (o *UpdateUserPasswordNoContent) String() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordNoContent ", 204)
}

func (o *UpdateUserPasswordNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserPasswordBadRequest creates a UpdateUserPasswordBadRequest with default headers values
func NewUpdateUserPasswordBadRequest() *UpdateUserPasswordBadRequest {
	return &UpdateUserPasswordBadRequest{}
}

/*
UpdateUserPasswordBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type UpdateUserPasswordBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update user password bad request response has a 2xx status code
func (o *UpdateUserPasswordBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user password bad request response has a 3xx status code
func (o *UpdateUserPasswordBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user password bad request response has a 4xx status code
func (o *UpdateUserPasswordBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user password bad request response has a 5xx status code
func (o *UpdateUserPasswordBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update user password bad request response a status code equal to that given
func (o *UpdateUserPasswordBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateUserPasswordBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserPasswordBadRequest) String() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserPasswordBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateUserPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPasswordUnauthorized creates a UpdateUserPasswordUnauthorized with default headers values
func NewUpdateUserPasswordUnauthorized() *UpdateUserPasswordUnauthorized {
	return &UpdateUserPasswordUnauthorized{}
}

/*
UpdateUserPasswordUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type UpdateUserPasswordUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update user password unauthorized response has a 2xx status code
func (o *UpdateUserPasswordUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user password unauthorized response has a 3xx status code
func (o *UpdateUserPasswordUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user password unauthorized response has a 4xx status code
func (o *UpdateUserPasswordUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user password unauthorized response has a 5xx status code
func (o *UpdateUserPasswordUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update user password unauthorized response a status code equal to that given
func (o *UpdateUserPasswordUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateUserPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserPasswordUnauthorized) String() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateUserPasswordUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateUserPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserPasswordTooManyRequests creates a UpdateUserPasswordTooManyRequests with default headers values
func NewUpdateUserPasswordTooManyRequests() *UpdateUserPasswordTooManyRequests {
	return &UpdateUserPasswordTooManyRequests{}
}

/*
UpdateUserPasswordTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type UpdateUserPasswordTooManyRequests struct {
}

// IsSuccess returns true when this update user password too many requests response has a 2xx status code
func (o *UpdateUserPasswordTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user password too many requests response has a 3xx status code
func (o *UpdateUserPasswordTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user password too many requests response has a 4xx status code
func (o *UpdateUserPasswordTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user password too many requests response has a 5xx status code
func (o *UpdateUserPasswordTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update user password too many requests response a status code equal to that given
func (o *UpdateUserPasswordTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *UpdateUserPasswordTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordTooManyRequests ", 429)
}

func (o *UpdateUserPasswordTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordTooManyRequests ", 429)
}

func (o *UpdateUserPasswordTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserPasswordInternalServerError creates a UpdateUserPasswordInternalServerError with default headers values
func NewUpdateUserPasswordInternalServerError() *UpdateUserPasswordInternalServerError {
	return &UpdateUserPasswordInternalServerError{}
}

/*
UpdateUserPasswordInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type UpdateUserPasswordInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update user password internal server error response has a 2xx status code
func (o *UpdateUserPasswordInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user password internal server error response has a 3xx status code
func (o *UpdateUserPasswordInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user password internal server error response has a 4xx status code
func (o *UpdateUserPasswordInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user password internal server error response has a 5xx status code
func (o *UpdateUserPasswordInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update user password internal server error response a status code equal to that given
func (o *UpdateUserPasswordInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateUserPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserPasswordInternalServerError) String() string {
	return fmt.Sprintf("[PUT /users/password][%d] updateUserPasswordInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserPasswordInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateUserPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
