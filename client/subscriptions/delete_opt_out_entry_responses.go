// Code generated by go-swagger; DO NOT EDIT.

package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// DeleteOptOutEntryReader is a Reader for the DeleteOptOutEntry structure.
type DeleteOptOutEntryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOptOutEntryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteOptOutEntryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteOptOutEntryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteOptOutEntryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteOptOutEntryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteOptOutEntryNoContent creates a DeleteOptOutEntryNoContent with default headers values
func NewDeleteOptOutEntryNoContent() *DeleteOptOutEntryNoContent {
	return &DeleteOptOutEntryNoContent{}
}

/*
DeleteOptOutEntryNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type DeleteOptOutEntryNoContent struct {
}

// IsSuccess returns true when this delete opt out entry no content response has a 2xx status code
func (o *DeleteOptOutEntryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete opt out entry no content response has a 3xx status code
func (o *DeleteOptOutEntryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete opt out entry no content response has a 4xx status code
func (o *DeleteOptOutEntryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete opt out entry no content response has a 5xx status code
func (o *DeleteOptOutEntryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete opt out entry no content response a status code equal to that given
func (o *DeleteOptOutEntryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteOptOutEntryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryNoContent ", 204)
}

func (o *DeleteOptOutEntryNoContent) String() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryNoContent ", 204)
}

func (o *DeleteOptOutEntryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOptOutEntryBadRequest creates a DeleteOptOutEntryBadRequest with default headers values
func NewDeleteOptOutEntryBadRequest() *DeleteOptOutEntryBadRequest {
	return &DeleteOptOutEntryBadRequest{}
}

/*
DeleteOptOutEntryBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type DeleteOptOutEntryBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete opt out entry bad request response has a 2xx status code
func (o *DeleteOptOutEntryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete opt out entry bad request response has a 3xx status code
func (o *DeleteOptOutEntryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete opt out entry bad request response has a 4xx status code
func (o *DeleteOptOutEntryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete opt out entry bad request response has a 5xx status code
func (o *DeleteOptOutEntryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete opt out entry bad request response a status code equal to that given
func (o *DeleteOptOutEntryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeleteOptOutEntryBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOptOutEntryBadRequest) String() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOptOutEntryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOptOutEntryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOptOutEntryTooManyRequests creates a DeleteOptOutEntryTooManyRequests with default headers values
func NewDeleteOptOutEntryTooManyRequests() *DeleteOptOutEntryTooManyRequests {
	return &DeleteOptOutEntryTooManyRequests{}
}

/*
DeleteOptOutEntryTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type DeleteOptOutEntryTooManyRequests struct {
}

// IsSuccess returns true when this delete opt out entry too many requests response has a 2xx status code
func (o *DeleteOptOutEntryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete opt out entry too many requests response has a 3xx status code
func (o *DeleteOptOutEntryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete opt out entry too many requests response has a 4xx status code
func (o *DeleteOptOutEntryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete opt out entry too many requests response has a 5xx status code
func (o *DeleteOptOutEntryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete opt out entry too many requests response a status code equal to that given
func (o *DeleteOptOutEntryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteOptOutEntryTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryTooManyRequests ", 429)
}

func (o *DeleteOptOutEntryTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryTooManyRequests ", 429)
}

func (o *DeleteOptOutEntryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOptOutEntryInternalServerError creates a DeleteOptOutEntryInternalServerError with default headers values
func NewDeleteOptOutEntryInternalServerError() *DeleteOptOutEntryInternalServerError {
	return &DeleteOptOutEntryInternalServerError{}
}

/*
DeleteOptOutEntryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type DeleteOptOutEntryInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete opt out entry internal server error response has a 2xx status code
func (o *DeleteOptOutEntryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete opt out entry internal server error response has a 3xx status code
func (o *DeleteOptOutEntryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete opt out entry internal server error response has a 4xx status code
func (o *DeleteOptOutEntryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete opt out entry internal server error response has a 5xx status code
func (o *DeleteOptOutEntryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete opt out entry internal server error response a status code equal to that given
func (o *DeleteOptOutEntryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteOptOutEntryInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOptOutEntryInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /subscriptions/opt-out/{optOutID}][%d] deleteOptOutEntryInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteOptOutEntryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOptOutEntryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
