// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// DeleteProductionUsageReader is a Reader for the DeleteProductionUsage structure.
type DeleteProductionUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProductionUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteProductionUsageNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteProductionUsageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProductionUsageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteProductionUsageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProductionUsageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteProductionUsageNoContent creates a DeleteProductionUsageNoContent with default headers values
func NewDeleteProductionUsageNoContent() *DeleteProductionUsageNoContent {
	return &DeleteProductionUsageNoContent{}
}

/*
DeleteProductionUsageNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type DeleteProductionUsageNoContent struct {
}

// IsSuccess returns true when this delete production usage no content response has a 2xx status code
func (o *DeleteProductionUsageNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete production usage no content response has a 3xx status code
func (o *DeleteProductionUsageNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete production usage no content response has a 4xx status code
func (o *DeleteProductionUsageNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete production usage no content response has a 5xx status code
func (o *DeleteProductionUsageNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete production usage no content response a status code equal to that given
func (o *DeleteProductionUsageNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteProductionUsageNoContent) Error() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageNoContent ", 204)
}

func (o *DeleteProductionUsageNoContent) String() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageNoContent ", 204)
}

func (o *DeleteProductionUsageNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductionUsageUnauthorized creates a DeleteProductionUsageUnauthorized with default headers values
func NewDeleteProductionUsageUnauthorized() *DeleteProductionUsageUnauthorized {
	return &DeleteProductionUsageUnauthorized{}
}

/*
DeleteProductionUsageUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type DeleteProductionUsageUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete production usage unauthorized response has a 2xx status code
func (o *DeleteProductionUsageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete production usage unauthorized response has a 3xx status code
func (o *DeleteProductionUsageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete production usage unauthorized response has a 4xx status code
func (o *DeleteProductionUsageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete production usage unauthorized response has a 5xx status code
func (o *DeleteProductionUsageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete production usage unauthorized response a status code equal to that given
func (o *DeleteProductionUsageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteProductionUsageUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteProductionUsageUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteProductionUsageUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteProductionUsageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductionUsageForbidden creates a DeleteProductionUsageForbidden with default headers values
func NewDeleteProductionUsageForbidden() *DeleteProductionUsageForbidden {
	return &DeleteProductionUsageForbidden{}
}

/*
DeleteProductionUsageForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type DeleteProductionUsageForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete production usage forbidden response has a 2xx status code
func (o *DeleteProductionUsageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete production usage forbidden response has a 3xx status code
func (o *DeleteProductionUsageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete production usage forbidden response has a 4xx status code
func (o *DeleteProductionUsageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete production usage forbidden response has a 5xx status code
func (o *DeleteProductionUsageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete production usage forbidden response a status code equal to that given
func (o *DeleteProductionUsageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteProductionUsageForbidden) Error() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProductionUsageForbidden) String() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageForbidden  %+v", 403, o.Payload)
}

func (o *DeleteProductionUsageForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteProductionUsageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductionUsageTooManyRequests creates a DeleteProductionUsageTooManyRequests with default headers values
func NewDeleteProductionUsageTooManyRequests() *DeleteProductionUsageTooManyRequests {
	return &DeleteProductionUsageTooManyRequests{}
}

/*
DeleteProductionUsageTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type DeleteProductionUsageTooManyRequests struct {
}

// IsSuccess returns true when this delete production usage too many requests response has a 2xx status code
func (o *DeleteProductionUsageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete production usage too many requests response has a 3xx status code
func (o *DeleteProductionUsageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete production usage too many requests response has a 4xx status code
func (o *DeleteProductionUsageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete production usage too many requests response has a 5xx status code
func (o *DeleteProductionUsageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete production usage too many requests response a status code equal to that given
func (o *DeleteProductionUsageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteProductionUsageTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageTooManyRequests ", 429)
}

func (o *DeleteProductionUsageTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageTooManyRequests ", 429)
}

func (o *DeleteProductionUsageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductionUsageInternalServerError creates a DeleteProductionUsageInternalServerError with default headers values
func NewDeleteProductionUsageInternalServerError() *DeleteProductionUsageInternalServerError {
	return &DeleteProductionUsageInternalServerError{}
}

/*
DeleteProductionUsageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type DeleteProductionUsageInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete production usage internal server error response has a 2xx status code
func (o *DeleteProductionUsageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete production usage internal server error response has a 3xx status code
func (o *DeleteProductionUsageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete production usage internal server error response has a 4xx status code
func (o *DeleteProductionUsageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete production usage internal server error response has a 5xx status code
func (o *DeleteProductionUsageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete production usage internal server error response a status code equal to that given
func (o *DeleteProductionUsageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeleteProductionUsageInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProductionUsageInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] deleteProductionUsageInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProductionUsageInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteProductionUsageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
