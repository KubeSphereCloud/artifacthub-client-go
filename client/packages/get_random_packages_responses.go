// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetRandomPackagesReader is a Reader for the GetRandomPackages structure.
type GetRandomPackagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRandomPackagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRandomPackagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetRandomPackagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRandomPackagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRandomPackagesOK creates a GetRandomPackagesOK with default headers values
func NewGetRandomPackagesOK() *GetRandomPackagesOK {
	return &GetRandomPackagesOK{}
}

/*
GetRandomPackagesOK describes a response with status code 200, with default header values.

GetRandomPackagesOK get random packages o k
*/
type GetRandomPackagesOK struct {
	Payload []*models.PackageSummary
}

// IsSuccess returns true when this get random packages o k response has a 2xx status code
func (o *GetRandomPackagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get random packages o k response has a 3xx status code
func (o *GetRandomPackagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get random packages o k response has a 4xx status code
func (o *GetRandomPackagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get random packages o k response has a 5xx status code
func (o *GetRandomPackagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get random packages o k response a status code equal to that given
func (o *GetRandomPackagesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRandomPackagesOK) Error() string {
	return fmt.Sprintf("[GET /packages/random][%d] getRandomPackagesOK  %+v", 200, o.Payload)
}

func (o *GetRandomPackagesOK) String() string {
	return fmt.Sprintf("[GET /packages/random][%d] getRandomPackagesOK  %+v", 200, o.Payload)
}

func (o *GetRandomPackagesOK) GetPayload() []*models.PackageSummary {
	return o.Payload
}

func (o *GetRandomPackagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRandomPackagesTooManyRequests creates a GetRandomPackagesTooManyRequests with default headers values
func NewGetRandomPackagesTooManyRequests() *GetRandomPackagesTooManyRequests {
	return &GetRandomPackagesTooManyRequests{}
}

/*
GetRandomPackagesTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetRandomPackagesTooManyRequests struct {
}

// IsSuccess returns true when this get random packages too many requests response has a 2xx status code
func (o *GetRandomPackagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get random packages too many requests response has a 3xx status code
func (o *GetRandomPackagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get random packages too many requests response has a 4xx status code
func (o *GetRandomPackagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get random packages too many requests response has a 5xx status code
func (o *GetRandomPackagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get random packages too many requests response a status code equal to that given
func (o *GetRandomPackagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetRandomPackagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/random][%d] getRandomPackagesTooManyRequests ", 429)
}

func (o *GetRandomPackagesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/random][%d] getRandomPackagesTooManyRequests ", 429)
}

func (o *GetRandomPackagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRandomPackagesInternalServerError creates a GetRandomPackagesInternalServerError with default headers values
func NewGetRandomPackagesInternalServerError() *GetRandomPackagesInternalServerError {
	return &GetRandomPackagesInternalServerError{}
}

/*
GetRandomPackagesInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetRandomPackagesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get random packages internal server error response has a 2xx status code
func (o *GetRandomPackagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get random packages internal server error response has a 3xx status code
func (o *GetRandomPackagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get random packages internal server error response has a 4xx status code
func (o *GetRandomPackagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get random packages internal server error response has a 5xx status code
func (o *GetRandomPackagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get random packages internal server error response a status code equal to that given
func (o *GetRandomPackagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetRandomPackagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/random][%d] getRandomPackagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRandomPackagesInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/random][%d] getRandomPackagesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRandomPackagesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRandomPackagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
