// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// ResetPasswordReader is a Reader for the ResetPassword structure.
type ResetPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewResetPasswordNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResetPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewResetPasswordTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResetPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResetPasswordNoContent creates a ResetPasswordNoContent with default headers values
func NewResetPasswordNoContent() *ResetPasswordNoContent {
	return &ResetPasswordNoContent{}
}

/*
ResetPasswordNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type ResetPasswordNoContent struct {
}

// IsSuccess returns true when this reset password no content response has a 2xx status code
func (o *ResetPasswordNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reset password no content response has a 3xx status code
func (o *ResetPasswordNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password no content response has a 4xx status code
func (o *ResetPasswordNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset password no content response has a 5xx status code
func (o *ResetPasswordNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password no content response a status code equal to that given
func (o *ResetPasswordNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ResetPasswordNoContent) Error() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordNoContent ", 204)
}

func (o *ResetPasswordNoContent) String() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordNoContent ", 204)
}

func (o *ResetPasswordNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetPasswordBadRequest creates a ResetPasswordBadRequest with default headers values
func NewResetPasswordBadRequest() *ResetPasswordBadRequest {
	return &ResetPasswordBadRequest{}
}

/*
ResetPasswordBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type ResetPasswordBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this reset password bad request response has a 2xx status code
func (o *ResetPasswordBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password bad request response has a 3xx status code
func (o *ResetPasswordBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password bad request response has a 4xx status code
func (o *ResetPasswordBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password bad request response has a 5xx status code
func (o *ResetPasswordBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password bad request response a status code equal to that given
func (o *ResetPasswordBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ResetPasswordBadRequest) Error() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordBadRequest  %+v", 400, o.Payload)
}

func (o *ResetPasswordBadRequest) String() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordBadRequest  %+v", 400, o.Payload)
}

func (o *ResetPasswordBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResetPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetPasswordTooManyRequests creates a ResetPasswordTooManyRequests with default headers values
func NewResetPasswordTooManyRequests() *ResetPasswordTooManyRequests {
	return &ResetPasswordTooManyRequests{}
}

/*
ResetPasswordTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type ResetPasswordTooManyRequests struct {
}

// IsSuccess returns true when this reset password too many requests response has a 2xx status code
func (o *ResetPasswordTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password too many requests response has a 3xx status code
func (o *ResetPasswordTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password too many requests response has a 4xx status code
func (o *ResetPasswordTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password too many requests response has a 5xx status code
func (o *ResetPasswordTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password too many requests response a status code equal to that given
func (o *ResetPasswordTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ResetPasswordTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordTooManyRequests ", 429)
}

func (o *ResetPasswordTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordTooManyRequests ", 429)
}

func (o *ResetPasswordTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetPasswordInternalServerError creates a ResetPasswordInternalServerError with default headers values
func NewResetPasswordInternalServerError() *ResetPasswordInternalServerError {
	return &ResetPasswordInternalServerError{}
}

/*
ResetPasswordInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type ResetPasswordInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this reset password internal server error response has a 2xx status code
func (o *ResetPasswordInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password internal server error response has a 3xx status code
func (o *ResetPasswordInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password internal server error response has a 4xx status code
func (o *ResetPasswordInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset password internal server error response has a 5xx status code
func (o *ResetPasswordInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this reset password internal server error response a status code equal to that given
func (o *ResetPasswordInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ResetPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordInternalServerError  %+v", 500, o.Payload)
}

func (o *ResetPasswordInternalServerError) String() string {
	return fmt.Sprintf("[PUT /users/reset-password][%d] resetPasswordInternalServerError  %+v", 500, o.Payload)
}

func (o *ResetPasswordInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ResetPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
