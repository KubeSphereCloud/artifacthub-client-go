// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetKubectlPluginDetailsReader is a Reader for the GetKubectlPluginDetails structure.
type GetKubectlPluginDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubectlPluginDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubectlPluginDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetKubectlPluginDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKubectlPluginDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKubectlPluginDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKubectlPluginDetailsOK creates a GetKubectlPluginDetailsOK with default headers values
func NewGetKubectlPluginDetailsOK() *GetKubectlPluginDetailsOK {
	return &GetKubectlPluginDetailsOK{}
}

/*
GetKubectlPluginDetailsOK describes a response with status code 200, with default header values.

GetKubectlPluginDetailsOK get kubectl plugin details o k
*/
type GetKubectlPluginDetailsOK struct {
	Payload *models.KrewPluginsPackage
}

// IsSuccess returns true when this get kubectl plugin details o k response has a 2xx status code
func (o *GetKubectlPluginDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kubectl plugin details o k response has a 3xx status code
func (o *GetKubectlPluginDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin details o k response has a 4xx status code
func (o *GetKubectlPluginDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubectl plugin details o k response has a 5xx status code
func (o *GetKubectlPluginDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubectl plugin details o k response a status code equal to that given
func (o *GetKubectlPluginDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKubectlPluginDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKubectlPluginDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKubectlPluginDetailsOK) GetPayload() *models.KrewPluginsPackage {
	return o.Payload
}

func (o *GetKubectlPluginDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KrewPluginsPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubectlPluginDetailsNotFound creates a GetKubectlPluginDetailsNotFound with default headers values
func NewGetKubectlPluginDetailsNotFound() *GetKubectlPluginDetailsNotFound {
	return &GetKubectlPluginDetailsNotFound{}
}

/*
GetKubectlPluginDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetKubectlPluginDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get kubectl plugin details not found response has a 2xx status code
func (o *GetKubectlPluginDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubectl plugin details not found response has a 3xx status code
func (o *GetKubectlPluginDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin details not found response has a 4xx status code
func (o *GetKubectlPluginDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubectl plugin details not found response has a 5xx status code
func (o *GetKubectlPluginDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubectl plugin details not found response a status code equal to that given
func (o *GetKubectlPluginDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKubectlPluginDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKubectlPluginDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKubectlPluginDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKubectlPluginDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubectlPluginDetailsTooManyRequests creates a GetKubectlPluginDetailsTooManyRequests with default headers values
func NewGetKubectlPluginDetailsTooManyRequests() *GetKubectlPluginDetailsTooManyRequests {
	return &GetKubectlPluginDetailsTooManyRequests{}
}

/*
GetKubectlPluginDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetKubectlPluginDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get kubectl plugin details too many requests response has a 2xx status code
func (o *GetKubectlPluginDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubectl plugin details too many requests response has a 3xx status code
func (o *GetKubectlPluginDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin details too many requests response has a 4xx status code
func (o *GetKubectlPluginDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kubectl plugin details too many requests response has a 5xx status code
func (o *GetKubectlPluginDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get kubectl plugin details too many requests response a status code equal to that given
func (o *GetKubectlPluginDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKubectlPluginDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsTooManyRequests ", 429)
}

func (o *GetKubectlPluginDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsTooManyRequests ", 429)
}

func (o *GetKubectlPluginDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubectlPluginDetailsInternalServerError creates a GetKubectlPluginDetailsInternalServerError with default headers values
func NewGetKubectlPluginDetailsInternalServerError() *GetKubectlPluginDetailsInternalServerError {
	return &GetKubectlPluginDetailsInternalServerError{}
}

/*
GetKubectlPluginDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetKubectlPluginDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get kubectl plugin details internal server error response has a 2xx status code
func (o *GetKubectlPluginDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kubectl plugin details internal server error response has a 3xx status code
func (o *GetKubectlPluginDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kubectl plugin details internal server error response has a 4xx status code
func (o *GetKubectlPluginDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kubectl plugin details internal server error response has a 5xx status code
func (o *GetKubectlPluginDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get kubectl plugin details internal server error response a status code equal to that given
func (o *GetKubectlPluginDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKubectlPluginDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKubectlPluginDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/krew/{repoName}/{packageName}][%d] getKubectlPluginDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKubectlPluginDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKubectlPluginDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
