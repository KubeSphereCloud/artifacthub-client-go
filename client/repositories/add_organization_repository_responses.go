// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// AddOrganizationRepositoryReader is a Reader for the AddOrganizationRepository structure.
type AddOrganizationRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddOrganizationRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddOrganizationRepositoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddOrganizationRepositoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddOrganizationRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddOrganizationRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddOrganizationRepositoryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddOrganizationRepositoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddOrganizationRepositoryCreated creates a AddOrganizationRepositoryCreated with default headers values
func NewAddOrganizationRepositoryCreated() *AddOrganizationRepositoryCreated {
	return &AddOrganizationRepositoryCreated{}
}

/*
AddOrganizationRepositoryCreated describes a response with status code 201, with default header values.

The request has succeeded and has led to the creation of a resource
*/
type AddOrganizationRepositoryCreated struct {
}

// IsSuccess returns true when this add organization repository created response has a 2xx status code
func (o *AddOrganizationRepositoryCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add organization repository created response has a 3xx status code
func (o *AddOrganizationRepositoryCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization repository created response has a 4xx status code
func (o *AddOrganizationRepositoryCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add organization repository created response has a 5xx status code
func (o *AddOrganizationRepositoryCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization repository created response a status code equal to that given
func (o *AddOrganizationRepositoryCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddOrganizationRepositoryCreated) Error() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryCreated ", 201)
}

func (o *AddOrganizationRepositoryCreated) String() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryCreated ", 201)
}

func (o *AddOrganizationRepositoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOrganizationRepositoryBadRequest creates a AddOrganizationRepositoryBadRequest with default headers values
func NewAddOrganizationRepositoryBadRequest() *AddOrganizationRepositoryBadRequest {
	return &AddOrganizationRepositoryBadRequest{}
}

/*
AddOrganizationRepositoryBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type AddOrganizationRepositoryBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add organization repository bad request response has a 2xx status code
func (o *AddOrganizationRepositoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization repository bad request response has a 3xx status code
func (o *AddOrganizationRepositoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization repository bad request response has a 4xx status code
func (o *AddOrganizationRepositoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add organization repository bad request response has a 5xx status code
func (o *AddOrganizationRepositoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization repository bad request response a status code equal to that given
func (o *AddOrganizationRepositoryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddOrganizationRepositoryBadRequest) Error() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryBadRequest  %+v", 400, o.Payload)
}

func (o *AddOrganizationRepositoryBadRequest) String() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryBadRequest  %+v", 400, o.Payload)
}

func (o *AddOrganizationRepositoryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrganizationRepositoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOrganizationRepositoryUnauthorized creates a AddOrganizationRepositoryUnauthorized with default headers values
func NewAddOrganizationRepositoryUnauthorized() *AddOrganizationRepositoryUnauthorized {
	return &AddOrganizationRepositoryUnauthorized{}
}

/*
AddOrganizationRepositoryUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type AddOrganizationRepositoryUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this add organization repository unauthorized response has a 2xx status code
func (o *AddOrganizationRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization repository unauthorized response has a 3xx status code
func (o *AddOrganizationRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization repository unauthorized response has a 4xx status code
func (o *AddOrganizationRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add organization repository unauthorized response has a 5xx status code
func (o *AddOrganizationRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization repository unauthorized response a status code equal to that given
func (o *AddOrganizationRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddOrganizationRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryUnauthorized  %+v", 401, o.Payload)
}

func (o *AddOrganizationRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryUnauthorized  %+v", 401, o.Payload)
}

func (o *AddOrganizationRepositoryUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrganizationRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOrganizationRepositoryForbidden creates a AddOrganizationRepositoryForbidden with default headers values
func NewAddOrganizationRepositoryForbidden() *AddOrganizationRepositoryForbidden {
	return &AddOrganizationRepositoryForbidden{}
}

/*
AddOrganizationRepositoryForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type AddOrganizationRepositoryForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this add organization repository forbidden response has a 2xx status code
func (o *AddOrganizationRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization repository forbidden response has a 3xx status code
func (o *AddOrganizationRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization repository forbidden response has a 4xx status code
func (o *AddOrganizationRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add organization repository forbidden response has a 5xx status code
func (o *AddOrganizationRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization repository forbidden response a status code equal to that given
func (o *AddOrganizationRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AddOrganizationRepositoryForbidden) Error() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryForbidden  %+v", 403, o.Payload)
}

func (o *AddOrganizationRepositoryForbidden) String() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryForbidden  %+v", 403, o.Payload)
}

func (o *AddOrganizationRepositoryForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrganizationRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOrganizationRepositoryTooManyRequests creates a AddOrganizationRepositoryTooManyRequests with default headers values
func NewAddOrganizationRepositoryTooManyRequests() *AddOrganizationRepositoryTooManyRequests {
	return &AddOrganizationRepositoryTooManyRequests{}
}

/*
AddOrganizationRepositoryTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type AddOrganizationRepositoryTooManyRequests struct {
}

// IsSuccess returns true when this add organization repository too many requests response has a 2xx status code
func (o *AddOrganizationRepositoryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization repository too many requests response has a 3xx status code
func (o *AddOrganizationRepositoryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization repository too many requests response has a 4xx status code
func (o *AddOrganizationRepositoryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this add organization repository too many requests response has a 5xx status code
func (o *AddOrganizationRepositoryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization repository too many requests response a status code equal to that given
func (o *AddOrganizationRepositoryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *AddOrganizationRepositoryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryTooManyRequests ", 429)
}

func (o *AddOrganizationRepositoryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryTooManyRequests ", 429)
}

func (o *AddOrganizationRepositoryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOrganizationRepositoryInternalServerError creates a AddOrganizationRepositoryInternalServerError with default headers values
func NewAddOrganizationRepositoryInternalServerError() *AddOrganizationRepositoryInternalServerError {
	return &AddOrganizationRepositoryInternalServerError{}
}

/*
AddOrganizationRepositoryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type AddOrganizationRepositoryInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add organization repository internal server error response has a 2xx status code
func (o *AddOrganizationRepositoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization repository internal server error response has a 3xx status code
func (o *AddOrganizationRepositoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization repository internal server error response has a 4xx status code
func (o *AddOrganizationRepositoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add organization repository internal server error response has a 5xx status code
func (o *AddOrganizationRepositoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add organization repository internal server error response a status code equal to that given
func (o *AddOrganizationRepositoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddOrganizationRepositoryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOrganizationRepositoryInternalServerError) String() string {
	return fmt.Sprintf("[POST /repositories/org/{orgName}][%d] addOrganizationRepositoryInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOrganizationRepositoryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrganizationRepositoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
