// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// AddUserRepositoryReader is a Reader for the AddUserRepository structure.
type AddUserRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddUserRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddUserRepositoryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddUserRepositoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddUserRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddUserRepositoryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddUserRepositoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddUserRepositoryCreated creates a AddUserRepositoryCreated with default headers values
func NewAddUserRepositoryCreated() *AddUserRepositoryCreated {
	return &AddUserRepositoryCreated{}
}

/*
AddUserRepositoryCreated describes a response with status code 201, with default header values.

The request has succeeded and has led to the creation of a resource
*/
type AddUserRepositoryCreated struct {
}

// IsSuccess returns true when this add user repository created response has a 2xx status code
func (o *AddUserRepositoryCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add user repository created response has a 3xx status code
func (o *AddUserRepositoryCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user repository created response has a 4xx status code
func (o *AddUserRepositoryCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add user repository created response has a 5xx status code
func (o *AddUserRepositoryCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add user repository created response a status code equal to that given
func (o *AddUserRepositoryCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddUserRepositoryCreated) Error() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryCreated ", 201)
}

func (o *AddUserRepositoryCreated) String() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryCreated ", 201)
}

func (o *AddUserRepositoryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserRepositoryBadRequest creates a AddUserRepositoryBadRequest with default headers values
func NewAddUserRepositoryBadRequest() *AddUserRepositoryBadRequest {
	return &AddUserRepositoryBadRequest{}
}

/*
AddUserRepositoryBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type AddUserRepositoryBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add user repository bad request response has a 2xx status code
func (o *AddUserRepositoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user repository bad request response has a 3xx status code
func (o *AddUserRepositoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user repository bad request response has a 4xx status code
func (o *AddUserRepositoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user repository bad request response has a 5xx status code
func (o *AddUserRepositoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add user repository bad request response a status code equal to that given
func (o *AddUserRepositoryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddUserRepositoryBadRequest) Error() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryBadRequest  %+v", 400, o.Payload)
}

func (o *AddUserRepositoryBadRequest) String() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryBadRequest  %+v", 400, o.Payload)
}

func (o *AddUserRepositoryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddUserRepositoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddUserRepositoryUnauthorized creates a AddUserRepositoryUnauthorized with default headers values
func NewAddUserRepositoryUnauthorized() *AddUserRepositoryUnauthorized {
	return &AddUserRepositoryUnauthorized{}
}

/*
AddUserRepositoryUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type AddUserRepositoryUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this add user repository unauthorized response has a 2xx status code
func (o *AddUserRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user repository unauthorized response has a 3xx status code
func (o *AddUserRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user repository unauthorized response has a 4xx status code
func (o *AddUserRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user repository unauthorized response has a 5xx status code
func (o *AddUserRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add user repository unauthorized response a status code equal to that given
func (o *AddUserRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddUserRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryUnauthorized  %+v", 401, o.Payload)
}

func (o *AddUserRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryUnauthorized  %+v", 401, o.Payload)
}

func (o *AddUserRepositoryUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddUserRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddUserRepositoryTooManyRequests creates a AddUserRepositoryTooManyRequests with default headers values
func NewAddUserRepositoryTooManyRequests() *AddUserRepositoryTooManyRequests {
	return &AddUserRepositoryTooManyRequests{}
}

/*
AddUserRepositoryTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type AddUserRepositoryTooManyRequests struct {
}

// IsSuccess returns true when this add user repository too many requests response has a 2xx status code
func (o *AddUserRepositoryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user repository too many requests response has a 3xx status code
func (o *AddUserRepositoryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user repository too many requests response has a 4xx status code
func (o *AddUserRepositoryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this add user repository too many requests response has a 5xx status code
func (o *AddUserRepositoryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this add user repository too many requests response a status code equal to that given
func (o *AddUserRepositoryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *AddUserRepositoryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryTooManyRequests ", 429)
}

func (o *AddUserRepositoryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryTooManyRequests ", 429)
}

func (o *AddUserRepositoryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUserRepositoryInternalServerError creates a AddUserRepositoryInternalServerError with default headers values
func NewAddUserRepositoryInternalServerError() *AddUserRepositoryInternalServerError {
	return &AddUserRepositoryInternalServerError{}
}

/*
AddUserRepositoryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type AddUserRepositoryInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add user repository internal server error response has a 2xx status code
func (o *AddUserRepositoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add user repository internal server error response has a 3xx status code
func (o *AddUserRepositoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add user repository internal server error response has a 4xx status code
func (o *AddUserRepositoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add user repository internal server error response has a 5xx status code
func (o *AddUserRepositoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add user repository internal server error response a status code equal to that given
func (o *AddUserRepositoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddUserRepositoryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryInternalServerError  %+v", 500, o.Payload)
}

func (o *AddUserRepositoryInternalServerError) String() string {
	return fmt.Sprintf("[POST /repositories/user][%d] addUserRepositoryInternalServerError  %+v", 500, o.Payload)
}

func (o *AddUserRepositoryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddUserRepositoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
