// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetOLMOperatorDetailsReader is a Reader for the GetOLMOperatorDetails structure.
type GetOLMOperatorDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOLMOperatorDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOLMOperatorDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetOLMOperatorDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOLMOperatorDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOLMOperatorDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOLMOperatorDetailsOK creates a GetOLMOperatorDetailsOK with default headers values
func NewGetOLMOperatorDetailsOK() *GetOLMOperatorDetailsOK {
	return &GetOLMOperatorDetailsOK{}
}

/*
GetOLMOperatorDetailsOK describes a response with status code 200, with default header values.

GetOLMOperatorDetailsOK get o l m operator details o k
*/
type GetOLMOperatorDetailsOK struct {
	Payload *models.OLMPackage
}

// IsSuccess returns true when this get o l m operator details o k response has a 2xx status code
func (o *GetOLMOperatorDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get o l m operator details o k response has a 3xx status code
func (o *GetOLMOperatorDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o l m operator details o k response has a 4xx status code
func (o *GetOLMOperatorDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o l m operator details o k response has a 5xx status code
func (o *GetOLMOperatorDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get o l m operator details o k response a status code equal to that given
func (o *GetOLMOperatorDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOLMOperatorDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsOK  %+v", 200, o.Payload)
}

func (o *GetOLMOperatorDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsOK  %+v", 200, o.Payload)
}

func (o *GetOLMOperatorDetailsOK) GetPayload() *models.OLMPackage {
	return o.Payload
}

func (o *GetOLMOperatorDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OLMPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOLMOperatorDetailsNotFound creates a GetOLMOperatorDetailsNotFound with default headers values
func NewGetOLMOperatorDetailsNotFound() *GetOLMOperatorDetailsNotFound {
	return &GetOLMOperatorDetailsNotFound{}
}

/*
GetOLMOperatorDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetOLMOperatorDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o l m operator details not found response has a 2xx status code
func (o *GetOLMOperatorDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o l m operator details not found response has a 3xx status code
func (o *GetOLMOperatorDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o l m operator details not found response has a 4xx status code
func (o *GetOLMOperatorDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o l m operator details not found response has a 5xx status code
func (o *GetOLMOperatorDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get o l m operator details not found response a status code equal to that given
func (o *GetOLMOperatorDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOLMOperatorDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetOLMOperatorDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetOLMOperatorDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOLMOperatorDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOLMOperatorDetailsTooManyRequests creates a GetOLMOperatorDetailsTooManyRequests with default headers values
func NewGetOLMOperatorDetailsTooManyRequests() *GetOLMOperatorDetailsTooManyRequests {
	return &GetOLMOperatorDetailsTooManyRequests{}
}

/*
GetOLMOperatorDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetOLMOperatorDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get o l m operator details too many requests response has a 2xx status code
func (o *GetOLMOperatorDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o l m operator details too many requests response has a 3xx status code
func (o *GetOLMOperatorDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o l m operator details too many requests response has a 4xx status code
func (o *GetOLMOperatorDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o l m operator details too many requests response has a 5xx status code
func (o *GetOLMOperatorDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get o l m operator details too many requests response a status code equal to that given
func (o *GetOLMOperatorDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOLMOperatorDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsTooManyRequests ", 429)
}

func (o *GetOLMOperatorDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsTooManyRequests ", 429)
}

func (o *GetOLMOperatorDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOLMOperatorDetailsInternalServerError creates a GetOLMOperatorDetailsInternalServerError with default headers values
func NewGetOLMOperatorDetailsInternalServerError() *GetOLMOperatorDetailsInternalServerError {
	return &GetOLMOperatorDetailsInternalServerError{}
}

/*
GetOLMOperatorDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetOLMOperatorDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o l m operator details internal server error response has a 2xx status code
func (o *GetOLMOperatorDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o l m operator details internal server error response has a 3xx status code
func (o *GetOLMOperatorDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o l m operator details internal server error response has a 4xx status code
func (o *GetOLMOperatorDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o l m operator details internal server error response has a 5xx status code
func (o *GetOLMOperatorDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get o l m operator details internal server error response a status code equal to that given
func (o *GetOLMOperatorDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOLMOperatorDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOLMOperatorDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/olm/{repoName}/{packageName}][%d] getOLMOperatorDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOLMOperatorDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOLMOperatorDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
