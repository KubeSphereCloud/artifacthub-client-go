// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetKnativeClientPluginIntegrationsDetailsReader is a Reader for the GetKnativeClientPluginIntegrationsDetails structure.
type GetKnativeClientPluginIntegrationsDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKnativeClientPluginIntegrationsDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKnativeClientPluginIntegrationsDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetKnativeClientPluginIntegrationsDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKnativeClientPluginIntegrationsDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKnativeClientPluginIntegrationsDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKnativeClientPluginIntegrationsDetailsOK creates a GetKnativeClientPluginIntegrationsDetailsOK with default headers values
func NewGetKnativeClientPluginIntegrationsDetailsOK() *GetKnativeClientPluginIntegrationsDetailsOK {
	return &GetKnativeClientPluginIntegrationsDetailsOK{}
}

/*
GetKnativeClientPluginIntegrationsDetailsOK describes a response with status code 200, with default header values.

GetKnativeClientPluginIntegrationsDetailsOK get knative client plugin integrations details o k
*/
type GetKnativeClientPluginIntegrationsDetailsOK struct {
	Payload *models.KnativeClientPluginsPackage
}

// IsSuccess returns true when this get knative client plugin integrations details o k response has a 2xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get knative client plugin integrations details o k response has a 3xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knative client plugin integrations details o k response has a 4xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knative client plugin integrations details o k response has a 5xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get knative client plugin integrations details o k response a status code equal to that given
func (o *GetKnativeClientPluginIntegrationsDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKnativeClientPluginIntegrationsDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKnativeClientPluginIntegrationsDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKnativeClientPluginIntegrationsDetailsOK) GetPayload() *models.KnativeClientPluginsPackage {
	return o.Payload
}

func (o *GetKnativeClientPluginIntegrationsDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KnativeClientPluginsPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnativeClientPluginIntegrationsDetailsNotFound creates a GetKnativeClientPluginIntegrationsDetailsNotFound with default headers values
func NewGetKnativeClientPluginIntegrationsDetailsNotFound() *GetKnativeClientPluginIntegrationsDetailsNotFound {
	return &GetKnativeClientPluginIntegrationsDetailsNotFound{}
}

/*
GetKnativeClientPluginIntegrationsDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetKnativeClientPluginIntegrationsDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get knative client plugin integrations details not found response has a 2xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knative client plugin integrations details not found response has a 3xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knative client plugin integrations details not found response has a 4xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knative client plugin integrations details not found response has a 5xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get knative client plugin integrations details not found response a status code equal to that given
func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKnativeClientPluginIntegrationsDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKnativeClientPluginIntegrationsDetailsTooManyRequests creates a GetKnativeClientPluginIntegrationsDetailsTooManyRequests with default headers values
func NewGetKnativeClientPluginIntegrationsDetailsTooManyRequests() *GetKnativeClientPluginIntegrationsDetailsTooManyRequests {
	return &GetKnativeClientPluginIntegrationsDetailsTooManyRequests{}
}

/*
GetKnativeClientPluginIntegrationsDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetKnativeClientPluginIntegrationsDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get knative client plugin integrations details too many requests response has a 2xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knative client plugin integrations details too many requests response has a 3xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knative client plugin integrations details too many requests response has a 4xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get knative client plugin integrations details too many requests response has a 5xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get knative client plugin integrations details too many requests response a status code equal to that given
func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsTooManyRequests ", 429)
}

func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsTooManyRequests ", 429)
}

func (o *GetKnativeClientPluginIntegrationsDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKnativeClientPluginIntegrationsDetailsInternalServerError creates a GetKnativeClientPluginIntegrationsDetailsInternalServerError with default headers values
func NewGetKnativeClientPluginIntegrationsDetailsInternalServerError() *GetKnativeClientPluginIntegrationsDetailsInternalServerError {
	return &GetKnativeClientPluginIntegrationsDetailsInternalServerError{}
}

/*
GetKnativeClientPluginIntegrationsDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetKnativeClientPluginIntegrationsDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get knative client plugin integrations details internal server error response has a 2xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get knative client plugin integrations details internal server error response has a 3xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get knative client plugin integrations details internal server error response has a 4xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get knative client plugin integrations details internal server error response has a 5xx status code
func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get knative client plugin integrations details internal server error response a status code equal to that given
func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/knative-client-plugin/{repoName}/{packageName}][%d] getKnativeClientPluginIntegrationsDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKnativeClientPluginIntegrationsDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
