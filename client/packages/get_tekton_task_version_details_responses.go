// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetTektonTaskVersionDetailsReader is a Reader for the GetTektonTaskVersionDetails structure.
type GetTektonTaskVersionDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTektonTaskVersionDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTektonTaskVersionDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTektonTaskVersionDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTektonTaskVersionDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTektonTaskVersionDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTektonTaskVersionDetailsOK creates a GetTektonTaskVersionDetailsOK with default headers values
func NewGetTektonTaskVersionDetailsOK() *GetTektonTaskVersionDetailsOK {
	return &GetTektonTaskVersionDetailsOK{}
}

/*
GetTektonTaskVersionDetailsOK describes a response with status code 200, with default header values.

GetTektonTaskVersionDetailsOK get tekton task version details o k
*/
type GetTektonTaskVersionDetailsOK struct {
	Payload *models.TektonTaskPackage
}

// IsSuccess returns true when this get tekton task version details o k response has a 2xx status code
func (o *GetTektonTaskVersionDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tekton task version details o k response has a 3xx status code
func (o *GetTektonTaskVersionDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton task version details o k response has a 4xx status code
func (o *GetTektonTaskVersionDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tekton task version details o k response has a 5xx status code
func (o *GetTektonTaskVersionDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton task version details o k response a status code equal to that given
func (o *GetTektonTaskVersionDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTektonTaskVersionDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetTektonTaskVersionDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetTektonTaskVersionDetailsOK) GetPayload() *models.TektonTaskPackage {
	return o.Payload
}

func (o *GetTektonTaskVersionDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TektonTaskPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTektonTaskVersionDetailsNotFound creates a GetTektonTaskVersionDetailsNotFound with default headers values
func NewGetTektonTaskVersionDetailsNotFound() *GetTektonTaskVersionDetailsNotFound {
	return &GetTektonTaskVersionDetailsNotFound{}
}

/*
GetTektonTaskVersionDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetTektonTaskVersionDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tekton task version details not found response has a 2xx status code
func (o *GetTektonTaskVersionDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton task version details not found response has a 3xx status code
func (o *GetTektonTaskVersionDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton task version details not found response has a 4xx status code
func (o *GetTektonTaskVersionDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton task version details not found response has a 5xx status code
func (o *GetTektonTaskVersionDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton task version details not found response a status code equal to that given
func (o *GetTektonTaskVersionDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTektonTaskVersionDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetTektonTaskVersionDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetTektonTaskVersionDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTektonTaskVersionDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTektonTaskVersionDetailsTooManyRequests creates a GetTektonTaskVersionDetailsTooManyRequests with default headers values
func NewGetTektonTaskVersionDetailsTooManyRequests() *GetTektonTaskVersionDetailsTooManyRequests {
	return &GetTektonTaskVersionDetailsTooManyRequests{}
}

/*
GetTektonTaskVersionDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetTektonTaskVersionDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get tekton task version details too many requests response has a 2xx status code
func (o *GetTektonTaskVersionDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton task version details too many requests response has a 3xx status code
func (o *GetTektonTaskVersionDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton task version details too many requests response has a 4xx status code
func (o *GetTektonTaskVersionDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tekton task version details too many requests response has a 5xx status code
func (o *GetTektonTaskVersionDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get tekton task version details too many requests response a status code equal to that given
func (o *GetTektonTaskVersionDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetTektonTaskVersionDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsTooManyRequests ", 429)
}

func (o *GetTektonTaskVersionDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsTooManyRequests ", 429)
}

func (o *GetTektonTaskVersionDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTektonTaskVersionDetailsInternalServerError creates a GetTektonTaskVersionDetailsInternalServerError with default headers values
func NewGetTektonTaskVersionDetailsInternalServerError() *GetTektonTaskVersionDetailsInternalServerError {
	return &GetTektonTaskVersionDetailsInternalServerError{}
}

/*
GetTektonTaskVersionDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetTektonTaskVersionDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tekton task version details internal server error response has a 2xx status code
func (o *GetTektonTaskVersionDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tekton task version details internal server error response has a 3xx status code
func (o *GetTektonTaskVersionDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tekton task version details internal server error response has a 4xx status code
func (o *GetTektonTaskVersionDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tekton task version details internal server error response has a 5xx status code
func (o *GetTektonTaskVersionDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tekton task version details internal server error response a status code equal to that given
func (o *GetTektonTaskVersionDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTektonTaskVersionDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTektonTaskVersionDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/tekton-task/{repoName}/{packageName}/{version}][%d] getTektonTaskVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTektonTaskVersionDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTektonTaskVersionDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
