// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// TransferRepositoryOwnershipToOrganizationReader is a Reader for the TransferRepositoryOwnershipToOrganization structure.
type TransferRepositoryOwnershipToOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TransferRepositoryOwnershipToOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewTransferRepositoryOwnershipToOrganizationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTransferRepositoryOwnershipToOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTransferRepositoryOwnershipToOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewTransferRepositoryOwnershipToOrganizationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTransferRepositoryOwnershipToOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTransferRepositoryOwnershipToOrganizationNoContent creates a TransferRepositoryOwnershipToOrganizationNoContent with default headers values
func NewTransferRepositoryOwnershipToOrganizationNoContent() *TransferRepositoryOwnershipToOrganizationNoContent {
	return &TransferRepositoryOwnershipToOrganizationNoContent{}
}

/*
TransferRepositoryOwnershipToOrganizationNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type TransferRepositoryOwnershipToOrganizationNoContent struct {
}

// IsSuccess returns true when this transfer repository ownership to organization no content response has a 2xx status code
func (o *TransferRepositoryOwnershipToOrganizationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this transfer repository ownership to organization no content response has a 3xx status code
func (o *TransferRepositoryOwnershipToOrganizationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this transfer repository ownership to organization no content response has a 4xx status code
func (o *TransferRepositoryOwnershipToOrganizationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this transfer repository ownership to organization no content response has a 5xx status code
func (o *TransferRepositoryOwnershipToOrganizationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this transfer repository ownership to organization no content response a status code equal to that given
func (o *TransferRepositoryOwnershipToOrganizationNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *TransferRepositoryOwnershipToOrganizationNoContent) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationNoContent ", 204)
}

func (o *TransferRepositoryOwnershipToOrganizationNoContent) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationNoContent ", 204)
}

func (o *TransferRepositoryOwnershipToOrganizationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTransferRepositoryOwnershipToOrganizationUnauthorized creates a TransferRepositoryOwnershipToOrganizationUnauthorized with default headers values
func NewTransferRepositoryOwnershipToOrganizationUnauthorized() *TransferRepositoryOwnershipToOrganizationUnauthorized {
	return &TransferRepositoryOwnershipToOrganizationUnauthorized{}
}

/*
TransferRepositoryOwnershipToOrganizationUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type TransferRepositoryOwnershipToOrganizationUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this transfer repository ownership to organization unauthorized response has a 2xx status code
func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this transfer repository ownership to organization unauthorized response has a 3xx status code
func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this transfer repository ownership to organization unauthorized response has a 4xx status code
func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this transfer repository ownership to organization unauthorized response has a 5xx status code
func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this transfer repository ownership to organization unauthorized response a status code equal to that given
func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *TransferRepositoryOwnershipToOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTransferRepositoryOwnershipToOrganizationForbidden creates a TransferRepositoryOwnershipToOrganizationForbidden with default headers values
func NewTransferRepositoryOwnershipToOrganizationForbidden() *TransferRepositoryOwnershipToOrganizationForbidden {
	return &TransferRepositoryOwnershipToOrganizationForbidden{}
}

/*
TransferRepositoryOwnershipToOrganizationForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type TransferRepositoryOwnershipToOrganizationForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this transfer repository ownership to organization forbidden response has a 2xx status code
func (o *TransferRepositoryOwnershipToOrganizationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this transfer repository ownership to organization forbidden response has a 3xx status code
func (o *TransferRepositoryOwnershipToOrganizationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this transfer repository ownership to organization forbidden response has a 4xx status code
func (o *TransferRepositoryOwnershipToOrganizationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this transfer repository ownership to organization forbidden response has a 5xx status code
func (o *TransferRepositoryOwnershipToOrganizationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this transfer repository ownership to organization forbidden response a status code equal to that given
func (o *TransferRepositoryOwnershipToOrganizationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *TransferRepositoryOwnershipToOrganizationForbidden) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *TransferRepositoryOwnershipToOrganizationForbidden) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *TransferRepositoryOwnershipToOrganizationForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *TransferRepositoryOwnershipToOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTransferRepositoryOwnershipToOrganizationTooManyRequests creates a TransferRepositoryOwnershipToOrganizationTooManyRequests with default headers values
func NewTransferRepositoryOwnershipToOrganizationTooManyRequests() *TransferRepositoryOwnershipToOrganizationTooManyRequests {
	return &TransferRepositoryOwnershipToOrganizationTooManyRequests{}
}

/*
TransferRepositoryOwnershipToOrganizationTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type TransferRepositoryOwnershipToOrganizationTooManyRequests struct {
}

// IsSuccess returns true when this transfer repository ownership to organization too many requests response has a 2xx status code
func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this transfer repository ownership to organization too many requests response has a 3xx status code
func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this transfer repository ownership to organization too many requests response has a 4xx status code
func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this transfer repository ownership to organization too many requests response has a 5xx status code
func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this transfer repository ownership to organization too many requests response a status code equal to that given
func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationTooManyRequests ", 429)
}

func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationTooManyRequests ", 429)
}

func (o *TransferRepositoryOwnershipToOrganizationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTransferRepositoryOwnershipToOrganizationInternalServerError creates a TransferRepositoryOwnershipToOrganizationInternalServerError with default headers values
func NewTransferRepositoryOwnershipToOrganizationInternalServerError() *TransferRepositoryOwnershipToOrganizationInternalServerError {
	return &TransferRepositoryOwnershipToOrganizationInternalServerError{}
}

/*
TransferRepositoryOwnershipToOrganizationInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type TransferRepositoryOwnershipToOrganizationInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this transfer repository ownership to organization internal server error response has a 2xx status code
func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this transfer repository ownership to organization internal server error response has a 3xx status code
func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this transfer repository ownership to organization internal server error response has a 4xx status code
func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this transfer repository ownership to organization internal server error response has a 5xx status code
func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this transfer repository ownership to organization internal server error response a status code equal to that given
func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/transfer][%d] transferRepositoryOwnershipToOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *TransferRepositoryOwnershipToOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
