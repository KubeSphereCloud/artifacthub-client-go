// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// VerifyEmailReader is a Reader for the VerifyEmail structure.
type VerifyEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VerifyEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewVerifyEmailNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVerifyEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewVerifyEmailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewVerifyEmailGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewVerifyEmailTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewVerifyEmailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewVerifyEmailNoContent creates a VerifyEmailNoContent with default headers values
func NewVerifyEmailNoContent() *VerifyEmailNoContent {
	return &VerifyEmailNoContent{}
}

/*
VerifyEmailNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type VerifyEmailNoContent struct {
}

// IsSuccess returns true when this verify email no content response has a 2xx status code
func (o *VerifyEmailNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this verify email no content response has a 3xx status code
func (o *VerifyEmailNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify email no content response has a 4xx status code
func (o *VerifyEmailNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this verify email no content response has a 5xx status code
func (o *VerifyEmailNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this verify email no content response a status code equal to that given
func (o *VerifyEmailNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *VerifyEmailNoContent) Error() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailNoContent ", 204)
}

func (o *VerifyEmailNoContent) String() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailNoContent ", 204)
}

func (o *VerifyEmailNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyEmailBadRequest creates a VerifyEmailBadRequest with default headers values
func NewVerifyEmailBadRequest() *VerifyEmailBadRequest {
	return &VerifyEmailBadRequest{}
}

/*
VerifyEmailBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type VerifyEmailBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this verify email bad request response has a 2xx status code
func (o *VerifyEmailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify email bad request response has a 3xx status code
func (o *VerifyEmailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify email bad request response has a 4xx status code
func (o *VerifyEmailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this verify email bad request response has a 5xx status code
func (o *VerifyEmailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this verify email bad request response a status code equal to that given
func (o *VerifyEmailBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *VerifyEmailBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailBadRequest  %+v", 400, o.Payload)
}

func (o *VerifyEmailBadRequest) String() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailBadRequest  %+v", 400, o.Payload)
}

func (o *VerifyEmailBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyEmailUnauthorized creates a VerifyEmailUnauthorized with default headers values
func NewVerifyEmailUnauthorized() *VerifyEmailUnauthorized {
	return &VerifyEmailUnauthorized{}
}

/*
VerifyEmailUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type VerifyEmailUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this verify email unauthorized response has a 2xx status code
func (o *VerifyEmailUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify email unauthorized response has a 3xx status code
func (o *VerifyEmailUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify email unauthorized response has a 4xx status code
func (o *VerifyEmailUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this verify email unauthorized response has a 5xx status code
func (o *VerifyEmailUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this verify email unauthorized response a status code equal to that given
func (o *VerifyEmailUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *VerifyEmailUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailUnauthorized  %+v", 401, o.Payload)
}

func (o *VerifyEmailUnauthorized) String() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailUnauthorized  %+v", 401, o.Payload)
}

func (o *VerifyEmailUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyEmailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyEmailGone creates a VerifyEmailGone with default headers values
func NewVerifyEmailGone() *VerifyEmailGone {
	return &VerifyEmailGone{}
}

/*
VerifyEmailGone describes a response with status code 410, with default header values.

The code provided has expired
*/
type VerifyEmailGone struct {
}

// IsSuccess returns true when this verify email gone response has a 2xx status code
func (o *VerifyEmailGone) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify email gone response has a 3xx status code
func (o *VerifyEmailGone) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify email gone response has a 4xx status code
func (o *VerifyEmailGone) IsClientError() bool {
	return true
}

// IsServerError returns true when this verify email gone response has a 5xx status code
func (o *VerifyEmailGone) IsServerError() bool {
	return false
}

// IsCode returns true when this verify email gone response a status code equal to that given
func (o *VerifyEmailGone) IsCode(code int) bool {
	return code == 410
}

func (o *VerifyEmailGone) Error() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailGone ", 410)
}

func (o *VerifyEmailGone) String() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailGone ", 410)
}

func (o *VerifyEmailGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyEmailTooManyRequests creates a VerifyEmailTooManyRequests with default headers values
func NewVerifyEmailTooManyRequests() *VerifyEmailTooManyRequests {
	return &VerifyEmailTooManyRequests{}
}

/*
VerifyEmailTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type VerifyEmailTooManyRequests struct {
}

// IsSuccess returns true when this verify email too many requests response has a 2xx status code
func (o *VerifyEmailTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify email too many requests response has a 3xx status code
func (o *VerifyEmailTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify email too many requests response has a 4xx status code
func (o *VerifyEmailTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this verify email too many requests response has a 5xx status code
func (o *VerifyEmailTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this verify email too many requests response a status code equal to that given
func (o *VerifyEmailTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *VerifyEmailTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailTooManyRequests ", 429)
}

func (o *VerifyEmailTooManyRequests) String() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailTooManyRequests ", 429)
}

func (o *VerifyEmailTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyEmailInternalServerError creates a VerifyEmailInternalServerError with default headers values
func NewVerifyEmailInternalServerError() *VerifyEmailInternalServerError {
	return &VerifyEmailInternalServerError{}
}

/*
VerifyEmailInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type VerifyEmailInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this verify email internal server error response has a 2xx status code
func (o *VerifyEmailInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this verify email internal server error response has a 3xx status code
func (o *VerifyEmailInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this verify email internal server error response has a 4xx status code
func (o *VerifyEmailInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this verify email internal server error response has a 5xx status code
func (o *VerifyEmailInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this verify email internal server error response a status code equal to that given
func (o *VerifyEmailInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *VerifyEmailInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailInternalServerError  %+v", 500, o.Payload)
}

func (o *VerifyEmailInternalServerError) String() string {
	return fmt.Sprintf("[POST /users/verify-email][%d] verifyEmailInternalServerError  %+v", 500, o.Payload)
}

func (o *VerifyEmailInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyEmailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
