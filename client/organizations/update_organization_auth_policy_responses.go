// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// UpdateOrganizationAuthPolicyReader is a Reader for the UpdateOrganizationAuthPolicy structure.
type UpdateOrganizationAuthPolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationAuthPolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateOrganizationAuthPolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOrganizationAuthPolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateOrganizationAuthPolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOrganizationAuthPolicyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateOrganizationAuthPolicyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOrganizationAuthPolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateOrganizationAuthPolicyNoContent creates a UpdateOrganizationAuthPolicyNoContent with default headers values
func NewUpdateOrganizationAuthPolicyNoContent() *UpdateOrganizationAuthPolicyNoContent {
	return &UpdateOrganizationAuthPolicyNoContent{}
}

/*
UpdateOrganizationAuthPolicyNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type UpdateOrganizationAuthPolicyNoContent struct {
}

// IsSuccess returns true when this update organization auth policy no content response has a 2xx status code
func (o *UpdateOrganizationAuthPolicyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update organization auth policy no content response has a 3xx status code
func (o *UpdateOrganizationAuthPolicyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization auth policy no content response has a 4xx status code
func (o *UpdateOrganizationAuthPolicyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization auth policy no content response has a 5xx status code
func (o *UpdateOrganizationAuthPolicyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization auth policy no content response a status code equal to that given
func (o *UpdateOrganizationAuthPolicyNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateOrganizationAuthPolicyNoContent) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyNoContent ", 204)
}

func (o *UpdateOrganizationAuthPolicyNoContent) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyNoContent ", 204)
}

func (o *UpdateOrganizationAuthPolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationAuthPolicyBadRequest creates a UpdateOrganizationAuthPolicyBadRequest with default headers values
func NewUpdateOrganizationAuthPolicyBadRequest() *UpdateOrganizationAuthPolicyBadRequest {
	return &UpdateOrganizationAuthPolicyBadRequest{}
}

/*
UpdateOrganizationAuthPolicyBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type UpdateOrganizationAuthPolicyBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization auth policy bad request response has a 2xx status code
func (o *UpdateOrganizationAuthPolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization auth policy bad request response has a 3xx status code
func (o *UpdateOrganizationAuthPolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization auth policy bad request response has a 4xx status code
func (o *UpdateOrganizationAuthPolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization auth policy bad request response has a 5xx status code
func (o *UpdateOrganizationAuthPolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization auth policy bad request response a status code equal to that given
func (o *UpdateOrganizationAuthPolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateOrganizationAuthPolicyBadRequest) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyBadRequest) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationAuthPolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationAuthPolicyUnauthorized creates a UpdateOrganizationAuthPolicyUnauthorized with default headers values
func NewUpdateOrganizationAuthPolicyUnauthorized() *UpdateOrganizationAuthPolicyUnauthorized {
	return &UpdateOrganizationAuthPolicyUnauthorized{}
}

/*
UpdateOrganizationAuthPolicyUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type UpdateOrganizationAuthPolicyUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization auth policy unauthorized response has a 2xx status code
func (o *UpdateOrganizationAuthPolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization auth policy unauthorized response has a 3xx status code
func (o *UpdateOrganizationAuthPolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization auth policy unauthorized response has a 4xx status code
func (o *UpdateOrganizationAuthPolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization auth policy unauthorized response has a 5xx status code
func (o *UpdateOrganizationAuthPolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization auth policy unauthorized response a status code equal to that given
func (o *UpdateOrganizationAuthPolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateOrganizationAuthPolicyUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyUnauthorized) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationAuthPolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationAuthPolicyForbidden creates a UpdateOrganizationAuthPolicyForbidden with default headers values
func NewUpdateOrganizationAuthPolicyForbidden() *UpdateOrganizationAuthPolicyForbidden {
	return &UpdateOrganizationAuthPolicyForbidden{}
}

/*
UpdateOrganizationAuthPolicyForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type UpdateOrganizationAuthPolicyForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization auth policy forbidden response has a 2xx status code
func (o *UpdateOrganizationAuthPolicyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization auth policy forbidden response has a 3xx status code
func (o *UpdateOrganizationAuthPolicyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization auth policy forbidden response has a 4xx status code
func (o *UpdateOrganizationAuthPolicyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization auth policy forbidden response has a 5xx status code
func (o *UpdateOrganizationAuthPolicyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization auth policy forbidden response a status code equal to that given
func (o *UpdateOrganizationAuthPolicyForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateOrganizationAuthPolicyForbidden) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyForbidden  %+v", 403, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyForbidden) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyForbidden  %+v", 403, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationAuthPolicyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationAuthPolicyTooManyRequests creates a UpdateOrganizationAuthPolicyTooManyRequests with default headers values
func NewUpdateOrganizationAuthPolicyTooManyRequests() *UpdateOrganizationAuthPolicyTooManyRequests {
	return &UpdateOrganizationAuthPolicyTooManyRequests{}
}

/*
UpdateOrganizationAuthPolicyTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type UpdateOrganizationAuthPolicyTooManyRequests struct {
}

// IsSuccess returns true when this update organization auth policy too many requests response has a 2xx status code
func (o *UpdateOrganizationAuthPolicyTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization auth policy too many requests response has a 3xx status code
func (o *UpdateOrganizationAuthPolicyTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization auth policy too many requests response has a 4xx status code
func (o *UpdateOrganizationAuthPolicyTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization auth policy too many requests response has a 5xx status code
func (o *UpdateOrganizationAuthPolicyTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization auth policy too many requests response a status code equal to that given
func (o *UpdateOrganizationAuthPolicyTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *UpdateOrganizationAuthPolicyTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyTooManyRequests ", 429)
}

func (o *UpdateOrganizationAuthPolicyTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyTooManyRequests ", 429)
}

func (o *UpdateOrganizationAuthPolicyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationAuthPolicyInternalServerError creates a UpdateOrganizationAuthPolicyInternalServerError with default headers values
func NewUpdateOrganizationAuthPolicyInternalServerError() *UpdateOrganizationAuthPolicyInternalServerError {
	return &UpdateOrganizationAuthPolicyInternalServerError{}
}

/*
UpdateOrganizationAuthPolicyInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type UpdateOrganizationAuthPolicyInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization auth policy internal server error response has a 2xx status code
func (o *UpdateOrganizationAuthPolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization auth policy internal server error response has a 3xx status code
func (o *UpdateOrganizationAuthPolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization auth policy internal server error response has a 4xx status code
func (o *UpdateOrganizationAuthPolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization auth policy internal server error response has a 5xx status code
func (o *UpdateOrganizationAuthPolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update organization auth policy internal server error response a status code equal to that given
func (o *UpdateOrganizationAuthPolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateOrganizationAuthPolicyInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyInternalServerError) String() string {
	return fmt.Sprintf("[PUT /orgs/{orgName}/authorization-policy][%d] updateOrganizationAuthPolicyInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOrganizationAuthPolicyInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationAuthPolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
