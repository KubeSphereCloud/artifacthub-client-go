// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Data2 Data2
//
// swagger:model Data2
type Data2 struct {

	// examples
	// Example: [{"cases":[{"content":"apiVersion: constraints.gatekeeper.sh/v1beta1","name":"constraint","path":"samples/container-must-meet-ratio/constraint.yaml"}],"name":"memory-ratio-only"}]
	Examples []*Example `json:"examples"`

	// template
	// Example: apiVersion: templates.gatekeeper.sh/v1 kind: ConstraintTemplate metadata:\n  name: k8sallowedrepos\n  annotations:\n    metadata.gatekeeper.sh/title: \"Kubernetes Allowed Repositories\"\n    description: \u003e-\n      Requires container images to begin with a string from the specified list.
	Template string `json:"template,omitempty"`
}

// Validate validates this data2
func (m *Data2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExamples(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Data2) validateExamples(formats strfmt.Registry) error {
	if swag.IsZero(m.Examples) { // not required
		return nil
	}

	for i := 0; i < len(m.Examples); i++ {
		if swag.IsZero(m.Examples[i]) { // not required
			continue
		}

		if m.Examples[i] != nil {
			if err := m.Examples[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("examples" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("examples" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this data2 based on the context it is used
func (m *Data2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateExamples(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Data2) contextValidateExamples(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Examples); i++ {

		if m.Examples[i] != nil {
			if err := m.Examples[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("examples" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("examples" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *Data2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Data2) UnmarshalBinary(b []byte) error {
	var res Data2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
