// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetBackstagePluginsDetailsReader is a Reader for the GetBackstagePluginsDetails structure.
type GetBackstagePluginsDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackstagePluginsDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackstagePluginsDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetBackstagePluginsDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetBackstagePluginsDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBackstagePluginsDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBackstagePluginsDetailsOK creates a GetBackstagePluginsDetailsOK with default headers values
func NewGetBackstagePluginsDetailsOK() *GetBackstagePluginsDetailsOK {
	return &GetBackstagePluginsDetailsOK{}
}

/*
GetBackstagePluginsDetailsOK describes a response with status code 200, with default header values.

GetBackstagePluginsDetailsOK get backstage plugins details o k
*/
type GetBackstagePluginsDetailsOK struct {
	Payload *models.BackstagePlugin
}

// IsSuccess returns true when this get backstage plugins details o k response has a 2xx status code
func (o *GetBackstagePluginsDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get backstage plugins details o k response has a 3xx status code
func (o *GetBackstagePluginsDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backstage plugins details o k response has a 4xx status code
func (o *GetBackstagePluginsDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backstage plugins details o k response has a 5xx status code
func (o *GetBackstagePluginsDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get backstage plugins details o k response a status code equal to that given
func (o *GetBackstagePluginsDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetBackstagePluginsDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsOK  %+v", 200, o.Payload)
}

func (o *GetBackstagePluginsDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsOK  %+v", 200, o.Payload)
}

func (o *GetBackstagePluginsDetailsOK) GetPayload() *models.BackstagePlugin {
	return o.Payload
}

func (o *GetBackstagePluginsDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackstagePlugin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackstagePluginsDetailsNotFound creates a GetBackstagePluginsDetailsNotFound with default headers values
func NewGetBackstagePluginsDetailsNotFound() *GetBackstagePluginsDetailsNotFound {
	return &GetBackstagePluginsDetailsNotFound{}
}

/*
GetBackstagePluginsDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetBackstagePluginsDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get backstage plugins details not found response has a 2xx status code
func (o *GetBackstagePluginsDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backstage plugins details not found response has a 3xx status code
func (o *GetBackstagePluginsDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backstage plugins details not found response has a 4xx status code
func (o *GetBackstagePluginsDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backstage plugins details not found response has a 5xx status code
func (o *GetBackstagePluginsDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get backstage plugins details not found response a status code equal to that given
func (o *GetBackstagePluginsDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetBackstagePluginsDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetBackstagePluginsDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetBackstagePluginsDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackstagePluginsDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackstagePluginsDetailsTooManyRequests creates a GetBackstagePluginsDetailsTooManyRequests with default headers values
func NewGetBackstagePluginsDetailsTooManyRequests() *GetBackstagePluginsDetailsTooManyRequests {
	return &GetBackstagePluginsDetailsTooManyRequests{}
}

/*
GetBackstagePluginsDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetBackstagePluginsDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get backstage plugins details too many requests response has a 2xx status code
func (o *GetBackstagePluginsDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backstage plugins details too many requests response has a 3xx status code
func (o *GetBackstagePluginsDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backstage plugins details too many requests response has a 4xx status code
func (o *GetBackstagePluginsDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backstage plugins details too many requests response has a 5xx status code
func (o *GetBackstagePluginsDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get backstage plugins details too many requests response a status code equal to that given
func (o *GetBackstagePluginsDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetBackstagePluginsDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsTooManyRequests ", 429)
}

func (o *GetBackstagePluginsDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsTooManyRequests ", 429)
}

func (o *GetBackstagePluginsDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBackstagePluginsDetailsInternalServerError creates a GetBackstagePluginsDetailsInternalServerError with default headers values
func NewGetBackstagePluginsDetailsInternalServerError() *GetBackstagePluginsDetailsInternalServerError {
	return &GetBackstagePluginsDetailsInternalServerError{}
}

/*
GetBackstagePluginsDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetBackstagePluginsDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get backstage plugins details internal server error response has a 2xx status code
func (o *GetBackstagePluginsDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backstage plugins details internal server error response has a 3xx status code
func (o *GetBackstagePluginsDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backstage plugins details internal server error response has a 4xx status code
func (o *GetBackstagePluginsDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backstage plugins details internal server error response has a 5xx status code
func (o *GetBackstagePluginsDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get backstage plugins details internal server error response a status code equal to that given
func (o *GetBackstagePluginsDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetBackstagePluginsDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBackstagePluginsDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/backstage/{repoName}/{packageName}][%d] getBackstagePluginsDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBackstagePluginsDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackstagePluginsDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
