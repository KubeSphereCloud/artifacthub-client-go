// Code generated by go-swagger; DO NOT EDIT.

package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// AddPackageSubscriptionReader is a Reader for the AddPackageSubscription structure.
type AddPackageSubscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPackageSubscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddPackageSubscriptionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddPackageSubscriptionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddPackageSubscriptionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddPackageSubscriptionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddPackageSubscriptionCreated creates a AddPackageSubscriptionCreated with default headers values
func NewAddPackageSubscriptionCreated() *AddPackageSubscriptionCreated {
	return &AddPackageSubscriptionCreated{}
}

/*
AddPackageSubscriptionCreated describes a response with status code 201, with default header values.

The request has succeeded and has led to the creation of a resource
*/
type AddPackageSubscriptionCreated struct {
}

// IsSuccess returns true when this add package subscription created response has a 2xx status code
func (o *AddPackageSubscriptionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add package subscription created response has a 3xx status code
func (o *AddPackageSubscriptionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add package subscription created response has a 4xx status code
func (o *AddPackageSubscriptionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add package subscription created response has a 5xx status code
func (o *AddPackageSubscriptionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add package subscription created response a status code equal to that given
func (o *AddPackageSubscriptionCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddPackageSubscriptionCreated) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionCreated ", 201)
}

func (o *AddPackageSubscriptionCreated) String() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionCreated ", 201)
}

func (o *AddPackageSubscriptionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPackageSubscriptionBadRequest creates a AddPackageSubscriptionBadRequest with default headers values
func NewAddPackageSubscriptionBadRequest() *AddPackageSubscriptionBadRequest {
	return &AddPackageSubscriptionBadRequest{}
}

/*
AddPackageSubscriptionBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type AddPackageSubscriptionBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add package subscription bad request response has a 2xx status code
func (o *AddPackageSubscriptionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add package subscription bad request response has a 3xx status code
func (o *AddPackageSubscriptionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add package subscription bad request response has a 4xx status code
func (o *AddPackageSubscriptionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add package subscription bad request response has a 5xx status code
func (o *AddPackageSubscriptionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add package subscription bad request response a status code equal to that given
func (o *AddPackageSubscriptionBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddPackageSubscriptionBadRequest) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *AddPackageSubscriptionBadRequest) String() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *AddPackageSubscriptionBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddPackageSubscriptionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddPackageSubscriptionTooManyRequests creates a AddPackageSubscriptionTooManyRequests with default headers values
func NewAddPackageSubscriptionTooManyRequests() *AddPackageSubscriptionTooManyRequests {
	return &AddPackageSubscriptionTooManyRequests{}
}

/*
AddPackageSubscriptionTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type AddPackageSubscriptionTooManyRequests struct {
}

// IsSuccess returns true when this add package subscription too many requests response has a 2xx status code
func (o *AddPackageSubscriptionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add package subscription too many requests response has a 3xx status code
func (o *AddPackageSubscriptionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add package subscription too many requests response has a 4xx status code
func (o *AddPackageSubscriptionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this add package subscription too many requests response has a 5xx status code
func (o *AddPackageSubscriptionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this add package subscription too many requests response a status code equal to that given
func (o *AddPackageSubscriptionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *AddPackageSubscriptionTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionTooManyRequests ", 429)
}

func (o *AddPackageSubscriptionTooManyRequests) String() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionTooManyRequests ", 429)
}

func (o *AddPackageSubscriptionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPackageSubscriptionInternalServerError creates a AddPackageSubscriptionInternalServerError with default headers values
func NewAddPackageSubscriptionInternalServerError() *AddPackageSubscriptionInternalServerError {
	return &AddPackageSubscriptionInternalServerError{}
}

/*
AddPackageSubscriptionInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type AddPackageSubscriptionInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add package subscription internal server error response has a 2xx status code
func (o *AddPackageSubscriptionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add package subscription internal server error response has a 3xx status code
func (o *AddPackageSubscriptionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add package subscription internal server error response has a 4xx status code
func (o *AddPackageSubscriptionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add package subscription internal server error response has a 5xx status code
func (o *AddPackageSubscriptionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add package subscription internal server error response a status code equal to that given
func (o *AddPackageSubscriptionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddPackageSubscriptionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPackageSubscriptionInternalServerError) String() string {
	return fmt.Sprintf("[POST /subscriptions][%d] addPackageSubscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPackageSubscriptionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddPackageSubscriptionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
