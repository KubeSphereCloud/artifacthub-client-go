// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// ClaimRepositoryOwnershipReader is a Reader for the ClaimRepositoryOwnership structure.
type ClaimRepositoryOwnershipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ClaimRepositoryOwnershipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewClaimRepositoryOwnershipNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewClaimRepositoryOwnershipUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewClaimRepositoryOwnershipForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewClaimRepositoryOwnershipTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewClaimRepositoryOwnershipInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewClaimRepositoryOwnershipNoContent creates a ClaimRepositoryOwnershipNoContent with default headers values
func NewClaimRepositoryOwnershipNoContent() *ClaimRepositoryOwnershipNoContent {
	return &ClaimRepositoryOwnershipNoContent{}
}

/*
ClaimRepositoryOwnershipNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type ClaimRepositoryOwnershipNoContent struct {
}

// IsSuccess returns true when this claim repository ownership no content response has a 2xx status code
func (o *ClaimRepositoryOwnershipNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this claim repository ownership no content response has a 3xx status code
func (o *ClaimRepositoryOwnershipNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this claim repository ownership no content response has a 4xx status code
func (o *ClaimRepositoryOwnershipNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this claim repository ownership no content response has a 5xx status code
func (o *ClaimRepositoryOwnershipNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this claim repository ownership no content response a status code equal to that given
func (o *ClaimRepositoryOwnershipNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ClaimRepositoryOwnershipNoContent) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipNoContent ", 204)
}

func (o *ClaimRepositoryOwnershipNoContent) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipNoContent ", 204)
}

func (o *ClaimRepositoryOwnershipNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClaimRepositoryOwnershipUnauthorized creates a ClaimRepositoryOwnershipUnauthorized with default headers values
func NewClaimRepositoryOwnershipUnauthorized() *ClaimRepositoryOwnershipUnauthorized {
	return &ClaimRepositoryOwnershipUnauthorized{}
}

/*
ClaimRepositoryOwnershipUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type ClaimRepositoryOwnershipUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this claim repository ownership unauthorized response has a 2xx status code
func (o *ClaimRepositoryOwnershipUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this claim repository ownership unauthorized response has a 3xx status code
func (o *ClaimRepositoryOwnershipUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this claim repository ownership unauthorized response has a 4xx status code
func (o *ClaimRepositoryOwnershipUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this claim repository ownership unauthorized response has a 5xx status code
func (o *ClaimRepositoryOwnershipUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this claim repository ownership unauthorized response a status code equal to that given
func (o *ClaimRepositoryOwnershipUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ClaimRepositoryOwnershipUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipUnauthorized  %+v", 401, o.Payload)
}

func (o *ClaimRepositoryOwnershipUnauthorized) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipUnauthorized  %+v", 401, o.Payload)
}

func (o *ClaimRepositoryOwnershipUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ClaimRepositoryOwnershipUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClaimRepositoryOwnershipForbidden creates a ClaimRepositoryOwnershipForbidden with default headers values
func NewClaimRepositoryOwnershipForbidden() *ClaimRepositoryOwnershipForbidden {
	return &ClaimRepositoryOwnershipForbidden{}
}

/*
ClaimRepositoryOwnershipForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type ClaimRepositoryOwnershipForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this claim repository ownership forbidden response has a 2xx status code
func (o *ClaimRepositoryOwnershipForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this claim repository ownership forbidden response has a 3xx status code
func (o *ClaimRepositoryOwnershipForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this claim repository ownership forbidden response has a 4xx status code
func (o *ClaimRepositoryOwnershipForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this claim repository ownership forbidden response has a 5xx status code
func (o *ClaimRepositoryOwnershipForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this claim repository ownership forbidden response a status code equal to that given
func (o *ClaimRepositoryOwnershipForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ClaimRepositoryOwnershipForbidden) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipForbidden  %+v", 403, o.Payload)
}

func (o *ClaimRepositoryOwnershipForbidden) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipForbidden  %+v", 403, o.Payload)
}

func (o *ClaimRepositoryOwnershipForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ClaimRepositoryOwnershipForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewClaimRepositoryOwnershipTooManyRequests creates a ClaimRepositoryOwnershipTooManyRequests with default headers values
func NewClaimRepositoryOwnershipTooManyRequests() *ClaimRepositoryOwnershipTooManyRequests {
	return &ClaimRepositoryOwnershipTooManyRequests{}
}

/*
ClaimRepositoryOwnershipTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type ClaimRepositoryOwnershipTooManyRequests struct {
}

// IsSuccess returns true when this claim repository ownership too many requests response has a 2xx status code
func (o *ClaimRepositoryOwnershipTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this claim repository ownership too many requests response has a 3xx status code
func (o *ClaimRepositoryOwnershipTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this claim repository ownership too many requests response has a 4xx status code
func (o *ClaimRepositoryOwnershipTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this claim repository ownership too many requests response has a 5xx status code
func (o *ClaimRepositoryOwnershipTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this claim repository ownership too many requests response a status code equal to that given
func (o *ClaimRepositoryOwnershipTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ClaimRepositoryOwnershipTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipTooManyRequests ", 429)
}

func (o *ClaimRepositoryOwnershipTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipTooManyRequests ", 429)
}

func (o *ClaimRepositoryOwnershipTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewClaimRepositoryOwnershipInternalServerError creates a ClaimRepositoryOwnershipInternalServerError with default headers values
func NewClaimRepositoryOwnershipInternalServerError() *ClaimRepositoryOwnershipInternalServerError {
	return &ClaimRepositoryOwnershipInternalServerError{}
}

/*
ClaimRepositoryOwnershipInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type ClaimRepositoryOwnershipInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this claim repository ownership internal server error response has a 2xx status code
func (o *ClaimRepositoryOwnershipInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this claim repository ownership internal server error response has a 3xx status code
func (o *ClaimRepositoryOwnershipInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this claim repository ownership internal server error response has a 4xx status code
func (o *ClaimRepositoryOwnershipInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this claim repository ownership internal server error response has a 5xx status code
func (o *ClaimRepositoryOwnershipInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this claim repository ownership internal server error response a status code equal to that given
func (o *ClaimRepositoryOwnershipInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ClaimRepositoryOwnershipInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipInternalServerError  %+v", 500, o.Payload)
}

func (o *ClaimRepositoryOwnershipInternalServerError) String() string {
	return fmt.Sprintf("[PUT /repositories/user/{repoName}/claim-ownership][%d] claimRepositoryOwnershipInternalServerError  %+v", 500, o.Payload)
}

func (o *ClaimRepositoryOwnershipInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ClaimRepositoryOwnershipInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
