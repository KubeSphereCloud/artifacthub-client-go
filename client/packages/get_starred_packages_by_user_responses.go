// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetStarredPackagesByUserReader is a Reader for the GetStarredPackagesByUser structure.
type GetStarredPackagesByUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStarredPackagesByUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStarredPackagesByUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetStarredPackagesByUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetStarredPackagesByUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStarredPackagesByUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStarredPackagesByUserOK creates a GetStarredPackagesByUserOK with default headers values
func NewGetStarredPackagesByUserOK() *GetStarredPackagesByUserOK {
	return &GetStarredPackagesByUserOK{}
}

/*
GetStarredPackagesByUserOK describes a response with status code 200, with default header values.

GetStarredPackagesByUserOK get starred packages by user o k
*/
type GetStarredPackagesByUserOK struct {

	/* Total number of starred packages
	 */
	PaginationTotalCount string

	Payload []*models.PackageSummary
}

// IsSuccess returns true when this get starred packages by user o k response has a 2xx status code
func (o *GetStarredPackagesByUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get starred packages by user o k response has a 3xx status code
func (o *GetStarredPackagesByUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get starred packages by user o k response has a 4xx status code
func (o *GetStarredPackagesByUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get starred packages by user o k response has a 5xx status code
func (o *GetStarredPackagesByUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get starred packages by user o k response a status code equal to that given
func (o *GetStarredPackagesByUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetStarredPackagesByUserOK) Error() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserOK  %+v", 200, o.Payload)
}

func (o *GetStarredPackagesByUserOK) String() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserOK  %+v", 200, o.Payload)
}

func (o *GetStarredPackagesByUserOK) GetPayload() []*models.PackageSummary {
	return o.Payload
}

func (o *GetStarredPackagesByUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Pagination-Total-Count
	hdrPaginationTotalCount := response.GetHeader("Pagination-Total-Count")

	if hdrPaginationTotalCount != "" {
		o.PaginationTotalCount = hdrPaginationTotalCount
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStarredPackagesByUserUnauthorized creates a GetStarredPackagesByUserUnauthorized with default headers values
func NewGetStarredPackagesByUserUnauthorized() *GetStarredPackagesByUserUnauthorized {
	return &GetStarredPackagesByUserUnauthorized{}
}

/*
GetStarredPackagesByUserUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type GetStarredPackagesByUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get starred packages by user unauthorized response has a 2xx status code
func (o *GetStarredPackagesByUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get starred packages by user unauthorized response has a 3xx status code
func (o *GetStarredPackagesByUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get starred packages by user unauthorized response has a 4xx status code
func (o *GetStarredPackagesByUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get starred packages by user unauthorized response has a 5xx status code
func (o *GetStarredPackagesByUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get starred packages by user unauthorized response a status code equal to that given
func (o *GetStarredPackagesByUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetStarredPackagesByUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStarredPackagesByUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetStarredPackagesByUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetStarredPackagesByUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStarredPackagesByUserTooManyRequests creates a GetStarredPackagesByUserTooManyRequests with default headers values
func NewGetStarredPackagesByUserTooManyRequests() *GetStarredPackagesByUserTooManyRequests {
	return &GetStarredPackagesByUserTooManyRequests{}
}

/*
GetStarredPackagesByUserTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetStarredPackagesByUserTooManyRequests struct {
}

// IsSuccess returns true when this get starred packages by user too many requests response has a 2xx status code
func (o *GetStarredPackagesByUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get starred packages by user too many requests response has a 3xx status code
func (o *GetStarredPackagesByUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get starred packages by user too many requests response has a 4xx status code
func (o *GetStarredPackagesByUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get starred packages by user too many requests response has a 5xx status code
func (o *GetStarredPackagesByUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get starred packages by user too many requests response a status code equal to that given
func (o *GetStarredPackagesByUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetStarredPackagesByUserTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserTooManyRequests ", 429)
}

func (o *GetStarredPackagesByUserTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserTooManyRequests ", 429)
}

func (o *GetStarredPackagesByUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStarredPackagesByUserInternalServerError creates a GetStarredPackagesByUserInternalServerError with default headers values
func NewGetStarredPackagesByUserInternalServerError() *GetStarredPackagesByUserInternalServerError {
	return &GetStarredPackagesByUserInternalServerError{}
}

/*
GetStarredPackagesByUserInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetStarredPackagesByUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get starred packages by user internal server error response has a 2xx status code
func (o *GetStarredPackagesByUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get starred packages by user internal server error response has a 3xx status code
func (o *GetStarredPackagesByUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get starred packages by user internal server error response has a 4xx status code
func (o *GetStarredPackagesByUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get starred packages by user internal server error response has a 5xx status code
func (o *GetStarredPackagesByUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get starred packages by user internal server error response a status code equal to that given
func (o *GetStarredPackagesByUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetStarredPackagesByUserInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStarredPackagesByUserInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/starred][%d] getStarredPackagesByUserInternalServerError  %+v", 500, o.Payload)
}

func (o *GetStarredPackagesByUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetStarredPackagesByUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
