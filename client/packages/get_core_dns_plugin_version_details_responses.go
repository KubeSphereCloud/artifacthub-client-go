// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetCoreDNSPluginVersionDetailsReader is a Reader for the GetCoreDNSPluginVersionDetails structure.
type GetCoreDNSPluginVersionDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCoreDNSPluginVersionDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCoreDNSPluginVersionDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCoreDNSPluginVersionDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCoreDNSPluginVersionDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCoreDNSPluginVersionDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCoreDNSPluginVersionDetailsOK creates a GetCoreDNSPluginVersionDetailsOK with default headers values
func NewGetCoreDNSPluginVersionDetailsOK() *GetCoreDNSPluginVersionDetailsOK {
	return &GetCoreDNSPluginVersionDetailsOK{}
}

/*
GetCoreDNSPluginVersionDetailsOK describes a response with status code 200, with default header values.

GetCoreDNSPluginVersionDetailsOK get core Dns plugin version details o k
*/
type GetCoreDNSPluginVersionDetailsOK struct {
	Payload *models.CoreDNSPackage
}

// IsSuccess returns true when this get core Dns plugin version details o k response has a 2xx status code
func (o *GetCoreDNSPluginVersionDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get core Dns plugin version details o k response has a 3xx status code
func (o *GetCoreDNSPluginVersionDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin version details o k response has a 4xx status code
func (o *GetCoreDNSPluginVersionDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get core Dns plugin version details o k response has a 5xx status code
func (o *GetCoreDNSPluginVersionDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get core Dns plugin version details o k response a status code equal to that given
func (o *GetCoreDNSPluginVersionDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCoreDNSPluginVersionDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetCoreDNSPluginVersionDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetCoreDNSPluginVersionDetailsOK) GetPayload() *models.CoreDNSPackage {
	return o.Payload
}

func (o *GetCoreDNSPluginVersionDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreDNSPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoreDNSPluginVersionDetailsNotFound creates a GetCoreDNSPluginVersionDetailsNotFound with default headers values
func NewGetCoreDNSPluginVersionDetailsNotFound() *GetCoreDNSPluginVersionDetailsNotFound {
	return &GetCoreDNSPluginVersionDetailsNotFound{}
}

/*
GetCoreDNSPluginVersionDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetCoreDNSPluginVersionDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get core Dns plugin version details not found response has a 2xx status code
func (o *GetCoreDNSPluginVersionDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get core Dns plugin version details not found response has a 3xx status code
func (o *GetCoreDNSPluginVersionDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin version details not found response has a 4xx status code
func (o *GetCoreDNSPluginVersionDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get core Dns plugin version details not found response has a 5xx status code
func (o *GetCoreDNSPluginVersionDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get core Dns plugin version details not found response a status code equal to that given
func (o *GetCoreDNSPluginVersionDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCoreDNSPluginVersionDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetCoreDNSPluginVersionDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetCoreDNSPluginVersionDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCoreDNSPluginVersionDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoreDNSPluginVersionDetailsTooManyRequests creates a GetCoreDNSPluginVersionDetailsTooManyRequests with default headers values
func NewGetCoreDNSPluginVersionDetailsTooManyRequests() *GetCoreDNSPluginVersionDetailsTooManyRequests {
	return &GetCoreDNSPluginVersionDetailsTooManyRequests{}
}

/*
GetCoreDNSPluginVersionDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetCoreDNSPluginVersionDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get core Dns plugin version details too many requests response has a 2xx status code
func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get core Dns plugin version details too many requests response has a 3xx status code
func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin version details too many requests response has a 4xx status code
func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get core Dns plugin version details too many requests response has a 5xx status code
func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get core Dns plugin version details too many requests response a status code equal to that given
func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsTooManyRequests ", 429)
}

func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsTooManyRequests ", 429)
}

func (o *GetCoreDNSPluginVersionDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCoreDNSPluginVersionDetailsInternalServerError creates a GetCoreDNSPluginVersionDetailsInternalServerError with default headers values
func NewGetCoreDNSPluginVersionDetailsInternalServerError() *GetCoreDNSPluginVersionDetailsInternalServerError {
	return &GetCoreDNSPluginVersionDetailsInternalServerError{}
}

/*
GetCoreDNSPluginVersionDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetCoreDNSPluginVersionDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get core Dns plugin version details internal server error response has a 2xx status code
func (o *GetCoreDNSPluginVersionDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get core Dns plugin version details internal server error response has a 3xx status code
func (o *GetCoreDNSPluginVersionDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin version details internal server error response has a 4xx status code
func (o *GetCoreDNSPluginVersionDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get core Dns plugin version details internal server error response has a 5xx status code
func (o *GetCoreDNSPluginVersionDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get core Dns plugin version details internal server error response a status code equal to that given
func (o *GetCoreDNSPluginVersionDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCoreDNSPluginVersionDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoreDNSPluginVersionDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}/{version}][%d] getCoreDnsPluginVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoreDNSPluginVersionDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCoreDNSPluginVersionDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
