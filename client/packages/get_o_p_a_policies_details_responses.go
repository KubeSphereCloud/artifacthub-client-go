// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetOPAPoliciesDetailsReader is a Reader for the GetOPAPoliciesDetails structure.
type GetOPAPoliciesDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOPAPoliciesDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOPAPoliciesDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetOPAPoliciesDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOPAPoliciesDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOPAPoliciesDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOPAPoliciesDetailsOK creates a GetOPAPoliciesDetailsOK with default headers values
func NewGetOPAPoliciesDetailsOK() *GetOPAPoliciesDetailsOK {
	return &GetOPAPoliciesDetailsOK{}
}

/*
GetOPAPoliciesDetailsOK describes a response with status code 200, with default header values.

GetOPAPoliciesDetailsOK get o p a policies details o k
*/
type GetOPAPoliciesDetailsOK struct {
	Payload *models.OPAPackage
}

// IsSuccess returns true when this get o p a policies details o k response has a 2xx status code
func (o *GetOPAPoliciesDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get o p a policies details o k response has a 3xx status code
func (o *GetOPAPoliciesDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies details o k response has a 4xx status code
func (o *GetOPAPoliciesDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o p a policies details o k response has a 5xx status code
func (o *GetOPAPoliciesDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get o p a policies details o k response a status code equal to that given
func (o *GetOPAPoliciesDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOPAPoliciesDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsOK  %+v", 200, o.Payload)
}

func (o *GetOPAPoliciesDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsOK  %+v", 200, o.Payload)
}

func (o *GetOPAPoliciesDetailsOK) GetPayload() *models.OPAPackage {
	return o.Payload
}

func (o *GetOPAPoliciesDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OPAPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOPAPoliciesDetailsNotFound creates a GetOPAPoliciesDetailsNotFound with default headers values
func NewGetOPAPoliciesDetailsNotFound() *GetOPAPoliciesDetailsNotFound {
	return &GetOPAPoliciesDetailsNotFound{}
}

/*
GetOPAPoliciesDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetOPAPoliciesDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o p a policies details not found response has a 2xx status code
func (o *GetOPAPoliciesDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o p a policies details not found response has a 3xx status code
func (o *GetOPAPoliciesDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies details not found response has a 4xx status code
func (o *GetOPAPoliciesDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o p a policies details not found response has a 5xx status code
func (o *GetOPAPoliciesDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get o p a policies details not found response a status code equal to that given
func (o *GetOPAPoliciesDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOPAPoliciesDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetOPAPoliciesDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetOPAPoliciesDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOPAPoliciesDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOPAPoliciesDetailsTooManyRequests creates a GetOPAPoliciesDetailsTooManyRequests with default headers values
func NewGetOPAPoliciesDetailsTooManyRequests() *GetOPAPoliciesDetailsTooManyRequests {
	return &GetOPAPoliciesDetailsTooManyRequests{}
}

/*
GetOPAPoliciesDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetOPAPoliciesDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get o p a policies details too many requests response has a 2xx status code
func (o *GetOPAPoliciesDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o p a policies details too many requests response has a 3xx status code
func (o *GetOPAPoliciesDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies details too many requests response has a 4xx status code
func (o *GetOPAPoliciesDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o p a policies details too many requests response has a 5xx status code
func (o *GetOPAPoliciesDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get o p a policies details too many requests response a status code equal to that given
func (o *GetOPAPoliciesDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOPAPoliciesDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsTooManyRequests ", 429)
}

func (o *GetOPAPoliciesDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsTooManyRequests ", 429)
}

func (o *GetOPAPoliciesDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOPAPoliciesDetailsInternalServerError creates a GetOPAPoliciesDetailsInternalServerError with default headers values
func NewGetOPAPoliciesDetailsInternalServerError() *GetOPAPoliciesDetailsInternalServerError {
	return &GetOPAPoliciesDetailsInternalServerError{}
}

/*
GetOPAPoliciesDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetOPAPoliciesDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o p a policies details internal server error response has a 2xx status code
func (o *GetOPAPoliciesDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o p a policies details internal server error response has a 3xx status code
func (o *GetOPAPoliciesDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies details internal server error response has a 4xx status code
func (o *GetOPAPoliciesDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o p a policies details internal server error response has a 5xx status code
func (o *GetOPAPoliciesDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get o p a policies details internal server error response a status code equal to that given
func (o *GetOPAPoliciesDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOPAPoliciesDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOPAPoliciesDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}][%d] getOPAPoliciesDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOPAPoliciesDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOPAPoliciesDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
