// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetKedaScalerVersionDetailsReader is a Reader for the GetKedaScalerVersionDetails structure.
type GetKedaScalerVersionDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKedaScalerVersionDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKedaScalerVersionDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetKedaScalerVersionDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKedaScalerVersionDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKedaScalerVersionDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKedaScalerVersionDetailsOK creates a GetKedaScalerVersionDetailsOK with default headers values
func NewGetKedaScalerVersionDetailsOK() *GetKedaScalerVersionDetailsOK {
	return &GetKedaScalerVersionDetailsOK{}
}

/*
GetKedaScalerVersionDetailsOK describes a response with status code 200, with default header values.

GetKedaScalerVersionDetailsOK get keda scaler version details o k
*/
type GetKedaScalerVersionDetailsOK struct {
	Payload *models.KedaScalerPackage
}

// IsSuccess returns true when this get keda scaler version details o k response has a 2xx status code
func (o *GetKedaScalerVersionDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get keda scaler version details o k response has a 3xx status code
func (o *GetKedaScalerVersionDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keda scaler version details o k response has a 4xx status code
func (o *GetKedaScalerVersionDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get keda scaler version details o k response has a 5xx status code
func (o *GetKedaScalerVersionDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get keda scaler version details o k response a status code equal to that given
func (o *GetKedaScalerVersionDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKedaScalerVersionDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKedaScalerVersionDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetKedaScalerVersionDetailsOK) GetPayload() *models.KedaScalerPackage {
	return o.Payload
}

func (o *GetKedaScalerVersionDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KedaScalerPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKedaScalerVersionDetailsNotFound creates a GetKedaScalerVersionDetailsNotFound with default headers values
func NewGetKedaScalerVersionDetailsNotFound() *GetKedaScalerVersionDetailsNotFound {
	return &GetKedaScalerVersionDetailsNotFound{}
}

/*
GetKedaScalerVersionDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetKedaScalerVersionDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get keda scaler version details not found response has a 2xx status code
func (o *GetKedaScalerVersionDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get keda scaler version details not found response has a 3xx status code
func (o *GetKedaScalerVersionDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keda scaler version details not found response has a 4xx status code
func (o *GetKedaScalerVersionDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get keda scaler version details not found response has a 5xx status code
func (o *GetKedaScalerVersionDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get keda scaler version details not found response a status code equal to that given
func (o *GetKedaScalerVersionDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetKedaScalerVersionDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKedaScalerVersionDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetKedaScalerVersionDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKedaScalerVersionDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKedaScalerVersionDetailsTooManyRequests creates a GetKedaScalerVersionDetailsTooManyRequests with default headers values
func NewGetKedaScalerVersionDetailsTooManyRequests() *GetKedaScalerVersionDetailsTooManyRequests {
	return &GetKedaScalerVersionDetailsTooManyRequests{}
}

/*
GetKedaScalerVersionDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetKedaScalerVersionDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get keda scaler version details too many requests response has a 2xx status code
func (o *GetKedaScalerVersionDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get keda scaler version details too many requests response has a 3xx status code
func (o *GetKedaScalerVersionDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keda scaler version details too many requests response has a 4xx status code
func (o *GetKedaScalerVersionDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get keda scaler version details too many requests response has a 5xx status code
func (o *GetKedaScalerVersionDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get keda scaler version details too many requests response a status code equal to that given
func (o *GetKedaScalerVersionDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetKedaScalerVersionDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsTooManyRequests ", 429)
}

func (o *GetKedaScalerVersionDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsTooManyRequests ", 429)
}

func (o *GetKedaScalerVersionDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKedaScalerVersionDetailsInternalServerError creates a GetKedaScalerVersionDetailsInternalServerError with default headers values
func NewGetKedaScalerVersionDetailsInternalServerError() *GetKedaScalerVersionDetailsInternalServerError {
	return &GetKedaScalerVersionDetailsInternalServerError{}
}

/*
GetKedaScalerVersionDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetKedaScalerVersionDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get keda scaler version details internal server error response has a 2xx status code
func (o *GetKedaScalerVersionDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get keda scaler version details internal server error response has a 3xx status code
func (o *GetKedaScalerVersionDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get keda scaler version details internal server error response has a 4xx status code
func (o *GetKedaScalerVersionDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get keda scaler version details internal server error response has a 5xx status code
func (o *GetKedaScalerVersionDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get keda scaler version details internal server error response a status code equal to that given
func (o *GetKedaScalerVersionDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetKedaScalerVersionDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKedaScalerVersionDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/keda-scaler/{repoName}/{packageName}/{version}][%d] getKedaScalerVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKedaScalerVersionDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKedaScalerVersionDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
