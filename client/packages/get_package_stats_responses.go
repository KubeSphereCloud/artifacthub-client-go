// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetPackageStatsReader is a Reader for the GetPackageStats structure.
type GetPackageStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPackageStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPackageStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 429:
		result := NewGetPackageStatsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPackageStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPackageStatsOK creates a GetPackageStatsOK with default headers values
func NewGetPackageStatsOK() *GetPackageStatsOK {
	return &GetPackageStatsOK{}
}

/*
GetPackageStatsOK describes a response with status code 200, with default header values.

GetPackageStatsOK get package stats o k
*/
type GetPackageStatsOK struct {
	Payload *models.PackagesStatsResponse
}

// IsSuccess returns true when this get package stats o k response has a 2xx status code
func (o *GetPackageStatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get package stats o k response has a 3xx status code
func (o *GetPackageStatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get package stats o k response has a 4xx status code
func (o *GetPackageStatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get package stats o k response has a 5xx status code
func (o *GetPackageStatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get package stats o k response a status code equal to that given
func (o *GetPackageStatsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPackageStatsOK) Error() string {
	return fmt.Sprintf("[GET /packages/stats][%d] getPackageStatsOK  %+v", 200, o.Payload)
}

func (o *GetPackageStatsOK) String() string {
	return fmt.Sprintf("[GET /packages/stats][%d] getPackageStatsOK  %+v", 200, o.Payload)
}

func (o *GetPackageStatsOK) GetPayload() *models.PackagesStatsResponse {
	return o.Payload
}

func (o *GetPackageStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PackagesStatsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPackageStatsTooManyRequests creates a GetPackageStatsTooManyRequests with default headers values
func NewGetPackageStatsTooManyRequests() *GetPackageStatsTooManyRequests {
	return &GetPackageStatsTooManyRequests{}
}

/*
GetPackageStatsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetPackageStatsTooManyRequests struct {
}

// IsSuccess returns true when this get package stats too many requests response has a 2xx status code
func (o *GetPackageStatsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get package stats too many requests response has a 3xx status code
func (o *GetPackageStatsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get package stats too many requests response has a 4xx status code
func (o *GetPackageStatsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get package stats too many requests response has a 5xx status code
func (o *GetPackageStatsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get package stats too many requests response a status code equal to that given
func (o *GetPackageStatsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetPackageStatsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/stats][%d] getPackageStatsTooManyRequests ", 429)
}

func (o *GetPackageStatsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/stats][%d] getPackageStatsTooManyRequests ", 429)
}

func (o *GetPackageStatsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPackageStatsInternalServerError creates a GetPackageStatsInternalServerError with default headers values
func NewGetPackageStatsInternalServerError() *GetPackageStatsInternalServerError {
	return &GetPackageStatsInternalServerError{}
}

/*
GetPackageStatsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetPackageStatsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get package stats internal server error response has a 2xx status code
func (o *GetPackageStatsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get package stats internal server error response has a 3xx status code
func (o *GetPackageStatsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get package stats internal server error response has a 4xx status code
func (o *GetPackageStatsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get package stats internal server error response has a 5xx status code
func (o *GetPackageStatsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get package stats internal server error response a status code equal to that given
func (o *GetPackageStatsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPackageStatsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/stats][%d] getPackageStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPackageStatsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/stats][%d] getPackageStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPackageStatsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPackageStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
