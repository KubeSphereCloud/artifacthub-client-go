// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new integrations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for integrations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetHarborReplicationDump(params *GetHarborReplicationDumpParams, opts ...ClientOption) (*GetHarborReplicationDumpOK, error)

	GetHelmExporterDump(params *GetHelmExporterDumpParams, opts ...ClientOption) (*GetHelmExporterDumpOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
GetHarborReplicationDump gets harbor replication dump

Get Harbor replication dump
*/
func (a *Client) GetHarborReplicationDump(params *GetHarborReplicationDumpParams, opts ...ClientOption) (*GetHarborReplicationDumpOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetHarborReplicationDumpParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getHarborReplicationDump",
		Method:             "GET",
		PathPattern:        "/harbor-replication",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetHarborReplicationDumpReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetHarborReplicationDumpOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getHarborReplicationDump: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetHelmExporterDump gets helm exporter dump

Get the latest version available of all charts listed in Artifact Hub.
*/
func (a *Client) GetHelmExporterDump(params *GetHelmExporterDumpParams, opts ...ClientOption) (*GetHelmExporterDumpOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetHelmExporterDumpParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getHelmExporterDump",
		Method:             "GET",
		PathPattern:        "/helm-exporter",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetHelmExporterDumpReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetHelmExporterDumpOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getHelmExporterDump: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
