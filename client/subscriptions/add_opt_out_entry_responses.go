// Code generated by go-swagger; DO NOT EDIT.

package subscriptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// AddOptOutEntryReader is a Reader for the AddOptOutEntry structure.
type AddOptOutEntryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddOptOutEntryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddOptOutEntryCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddOptOutEntryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddOptOutEntryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddOptOutEntryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddOptOutEntryCreated creates a AddOptOutEntryCreated with default headers values
func NewAddOptOutEntryCreated() *AddOptOutEntryCreated {
	return &AddOptOutEntryCreated{}
}

/*
AddOptOutEntryCreated describes a response with status code 201, with default header values.

The request has succeeded and has led to the creation of a resource
*/
type AddOptOutEntryCreated struct {
}

// IsSuccess returns true when this add opt out entry created response has a 2xx status code
func (o *AddOptOutEntryCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add opt out entry created response has a 3xx status code
func (o *AddOptOutEntryCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add opt out entry created response has a 4xx status code
func (o *AddOptOutEntryCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add opt out entry created response has a 5xx status code
func (o *AddOptOutEntryCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add opt out entry created response a status code equal to that given
func (o *AddOptOutEntryCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddOptOutEntryCreated) Error() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryCreated ", 201)
}

func (o *AddOptOutEntryCreated) String() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryCreated ", 201)
}

func (o *AddOptOutEntryCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOptOutEntryBadRequest creates a AddOptOutEntryBadRequest with default headers values
func NewAddOptOutEntryBadRequest() *AddOptOutEntryBadRequest {
	return &AddOptOutEntryBadRequest{}
}

/*
AddOptOutEntryBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type AddOptOutEntryBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add opt out entry bad request response has a 2xx status code
func (o *AddOptOutEntryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add opt out entry bad request response has a 3xx status code
func (o *AddOptOutEntryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add opt out entry bad request response has a 4xx status code
func (o *AddOptOutEntryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add opt out entry bad request response has a 5xx status code
func (o *AddOptOutEntryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add opt out entry bad request response a status code equal to that given
func (o *AddOptOutEntryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddOptOutEntryBadRequest) Error() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryBadRequest  %+v", 400, o.Payload)
}

func (o *AddOptOutEntryBadRequest) String() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryBadRequest  %+v", 400, o.Payload)
}

func (o *AddOptOutEntryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOptOutEntryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOptOutEntryTooManyRequests creates a AddOptOutEntryTooManyRequests with default headers values
func NewAddOptOutEntryTooManyRequests() *AddOptOutEntryTooManyRequests {
	return &AddOptOutEntryTooManyRequests{}
}

/*
AddOptOutEntryTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type AddOptOutEntryTooManyRequests struct {
}

// IsSuccess returns true when this add opt out entry too many requests response has a 2xx status code
func (o *AddOptOutEntryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add opt out entry too many requests response has a 3xx status code
func (o *AddOptOutEntryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add opt out entry too many requests response has a 4xx status code
func (o *AddOptOutEntryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this add opt out entry too many requests response has a 5xx status code
func (o *AddOptOutEntryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this add opt out entry too many requests response a status code equal to that given
func (o *AddOptOutEntryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *AddOptOutEntryTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryTooManyRequests ", 429)
}

func (o *AddOptOutEntryTooManyRequests) String() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryTooManyRequests ", 429)
}

func (o *AddOptOutEntryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOptOutEntryInternalServerError creates a AddOptOutEntryInternalServerError with default headers values
func NewAddOptOutEntryInternalServerError() *AddOptOutEntryInternalServerError {
	return &AddOptOutEntryInternalServerError{}
}

/*
AddOptOutEntryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type AddOptOutEntryInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add opt out entry internal server error response has a 2xx status code
func (o *AddOptOutEntryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add opt out entry internal server error response has a 3xx status code
func (o *AddOptOutEntryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add opt out entry internal server error response has a 4xx status code
func (o *AddOptOutEntryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add opt out entry internal server error response has a 5xx status code
func (o *AddOptOutEntryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add opt out entry internal server error response a status code equal to that given
func (o *AddOptOutEntryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddOptOutEntryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOptOutEntryInternalServerError) String() string {
	return fmt.Sprintf("[POST /subscriptions/opt-out][%d] addOptOutEntryInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOptOutEntryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOptOutEntryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
