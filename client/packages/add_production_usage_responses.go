// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// AddProductionUsageReader is a Reader for the AddProductionUsage structure.
type AddProductionUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddProductionUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddProductionUsageNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddProductionUsageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddProductionUsageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddProductionUsageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddProductionUsageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddProductionUsageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddProductionUsageNoContent creates a AddProductionUsageNoContent with default headers values
func NewAddProductionUsageNoContent() *AddProductionUsageNoContent {
	return &AddProductionUsageNoContent{}
}

/*
AddProductionUsageNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type AddProductionUsageNoContent struct {
}

// IsSuccess returns true when this add production usage no content response has a 2xx status code
func (o *AddProductionUsageNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add production usage no content response has a 3xx status code
func (o *AddProductionUsageNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add production usage no content response has a 4xx status code
func (o *AddProductionUsageNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this add production usage no content response has a 5xx status code
func (o *AddProductionUsageNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this add production usage no content response a status code equal to that given
func (o *AddProductionUsageNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *AddProductionUsageNoContent) Error() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageNoContent ", 204)
}

func (o *AddProductionUsageNoContent) String() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageNoContent ", 204)
}

func (o *AddProductionUsageNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProductionUsageBadRequest creates a AddProductionUsageBadRequest with default headers values
func NewAddProductionUsageBadRequest() *AddProductionUsageBadRequest {
	return &AddProductionUsageBadRequest{}
}

/*
AddProductionUsageBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type AddProductionUsageBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add production usage bad request response has a 2xx status code
func (o *AddProductionUsageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add production usage bad request response has a 3xx status code
func (o *AddProductionUsageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add production usage bad request response has a 4xx status code
func (o *AddProductionUsageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add production usage bad request response has a 5xx status code
func (o *AddProductionUsageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add production usage bad request response a status code equal to that given
func (o *AddProductionUsageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddProductionUsageBadRequest) Error() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageBadRequest  %+v", 400, o.Payload)
}

func (o *AddProductionUsageBadRequest) String() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageBadRequest  %+v", 400, o.Payload)
}

func (o *AddProductionUsageBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddProductionUsageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProductionUsageUnauthorized creates a AddProductionUsageUnauthorized with default headers values
func NewAddProductionUsageUnauthorized() *AddProductionUsageUnauthorized {
	return &AddProductionUsageUnauthorized{}
}

/*
AddProductionUsageUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type AddProductionUsageUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this add production usage unauthorized response has a 2xx status code
func (o *AddProductionUsageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add production usage unauthorized response has a 3xx status code
func (o *AddProductionUsageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add production usage unauthorized response has a 4xx status code
func (o *AddProductionUsageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add production usage unauthorized response has a 5xx status code
func (o *AddProductionUsageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add production usage unauthorized response a status code equal to that given
func (o *AddProductionUsageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddProductionUsageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageUnauthorized  %+v", 401, o.Payload)
}

func (o *AddProductionUsageUnauthorized) String() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageUnauthorized  %+v", 401, o.Payload)
}

func (o *AddProductionUsageUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddProductionUsageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProductionUsageForbidden creates a AddProductionUsageForbidden with default headers values
func NewAddProductionUsageForbidden() *AddProductionUsageForbidden {
	return &AddProductionUsageForbidden{}
}

/*
AddProductionUsageForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type AddProductionUsageForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this add production usage forbidden response has a 2xx status code
func (o *AddProductionUsageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add production usage forbidden response has a 3xx status code
func (o *AddProductionUsageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add production usage forbidden response has a 4xx status code
func (o *AddProductionUsageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add production usage forbidden response has a 5xx status code
func (o *AddProductionUsageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add production usage forbidden response a status code equal to that given
func (o *AddProductionUsageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AddProductionUsageForbidden) Error() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageForbidden  %+v", 403, o.Payload)
}

func (o *AddProductionUsageForbidden) String() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageForbidden  %+v", 403, o.Payload)
}

func (o *AddProductionUsageForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddProductionUsageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProductionUsageTooManyRequests creates a AddProductionUsageTooManyRequests with default headers values
func NewAddProductionUsageTooManyRequests() *AddProductionUsageTooManyRequests {
	return &AddProductionUsageTooManyRequests{}
}

/*
AddProductionUsageTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type AddProductionUsageTooManyRequests struct {
}

// IsSuccess returns true when this add production usage too many requests response has a 2xx status code
func (o *AddProductionUsageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add production usage too many requests response has a 3xx status code
func (o *AddProductionUsageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add production usage too many requests response has a 4xx status code
func (o *AddProductionUsageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this add production usage too many requests response has a 5xx status code
func (o *AddProductionUsageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this add production usage too many requests response a status code equal to that given
func (o *AddProductionUsageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *AddProductionUsageTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageTooManyRequests ", 429)
}

func (o *AddProductionUsageTooManyRequests) String() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageTooManyRequests ", 429)
}

func (o *AddProductionUsageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddProductionUsageInternalServerError creates a AddProductionUsageInternalServerError with default headers values
func NewAddProductionUsageInternalServerError() *AddProductionUsageInternalServerError {
	return &AddProductionUsageInternalServerError{}
}

/*
AddProductionUsageInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type AddProductionUsageInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add production usage internal server error response has a 2xx status code
func (o *AddProductionUsageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add production usage internal server error response has a 3xx status code
func (o *AddProductionUsageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add production usage internal server error response has a 4xx status code
func (o *AddProductionUsageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add production usage internal server error response has a 5xx status code
func (o *AddProductionUsageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add production usage internal server error response a status code equal to that given
func (o *AddProductionUsageInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddProductionUsageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageInternalServerError  %+v", 500, o.Payload)
}

func (o *AddProductionUsageInternalServerError) String() string {
	return fmt.Sprintf("[POST /packages/{repoKindParam}/{repoName}/{packageName}/production-usage/${orgName}][%d] addProductionUsageInternalServerError  %+v", 500, o.Payload)
}

func (o *AddProductionUsageInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddProductionUsageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
