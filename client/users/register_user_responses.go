// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// RegisterUserReader is a Reader for the RegisterUser structure.
type RegisterUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRegisterUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRegisterUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRegisterUserCreated creates a RegisterUserCreated with default headers values
func NewRegisterUserCreated() *RegisterUserCreated {
	return &RegisterUserCreated{}
}

/*
RegisterUserCreated describes a response with status code 201, with default header values.

The request has succeeded and has led to the creation of a resource
*/
type RegisterUserCreated struct {
}

// IsSuccess returns true when this register user created response has a 2xx status code
func (o *RegisterUserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register user created response has a 3xx status code
func (o *RegisterUserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register user created response has a 4xx status code
func (o *RegisterUserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this register user created response has a 5xx status code
func (o *RegisterUserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this register user created response a status code equal to that given
func (o *RegisterUserCreated) IsCode(code int) bool {
	return code == 201
}

func (o *RegisterUserCreated) Error() string {
	return fmt.Sprintf("[POST /users][%d] registerUserCreated ", 201)
}

func (o *RegisterUserCreated) String() string {
	return fmt.Sprintf("[POST /users][%d] registerUserCreated ", 201)
}

func (o *RegisterUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterUserBadRequest creates a RegisterUserBadRequest with default headers values
func NewRegisterUserBadRequest() *RegisterUserBadRequest {
	return &RegisterUserBadRequest{}
}

/*
RegisterUserBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type RegisterUserBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this register user bad request response has a 2xx status code
func (o *RegisterUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register user bad request response has a 3xx status code
func (o *RegisterUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register user bad request response has a 4xx status code
func (o *RegisterUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this register user bad request response has a 5xx status code
func (o *RegisterUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this register user bad request response a status code equal to that given
func (o *RegisterUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RegisterUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /users][%d] registerUserBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterUserBadRequest) String() string {
	return fmt.Sprintf("[POST /users][%d] registerUserBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterUserBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterUserTooManyRequests creates a RegisterUserTooManyRequests with default headers values
func NewRegisterUserTooManyRequests() *RegisterUserTooManyRequests {
	return &RegisterUserTooManyRequests{}
}

/*
RegisterUserTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type RegisterUserTooManyRequests struct {
}

// IsSuccess returns true when this register user too many requests response has a 2xx status code
func (o *RegisterUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register user too many requests response has a 3xx status code
func (o *RegisterUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register user too many requests response has a 4xx status code
func (o *RegisterUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this register user too many requests response has a 5xx status code
func (o *RegisterUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this register user too many requests response a status code equal to that given
func (o *RegisterUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *RegisterUserTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /users][%d] registerUserTooManyRequests ", 429)
}

func (o *RegisterUserTooManyRequests) String() string {
	return fmt.Sprintf("[POST /users][%d] registerUserTooManyRequests ", 429)
}

func (o *RegisterUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterUserInternalServerError creates a RegisterUserInternalServerError with default headers values
func NewRegisterUserInternalServerError() *RegisterUserInternalServerError {
	return &RegisterUserInternalServerError{}
}

/*
RegisterUserInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type RegisterUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this register user internal server error response has a 2xx status code
func (o *RegisterUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register user internal server error response has a 3xx status code
func (o *RegisterUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register user internal server error response has a 4xx status code
func (o *RegisterUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this register user internal server error response has a 5xx status code
func (o *RegisterUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this register user internal server error response a status code equal to that given
func (o *RegisterUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *RegisterUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users][%d] registerUserInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /users][%d] registerUserInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
