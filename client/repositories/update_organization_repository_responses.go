// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// UpdateOrganizationRepositoryReader is a Reader for the UpdateOrganizationRepository structure.
type UpdateOrganizationRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateOrganizationRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOrganizationRepositoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateOrganizationRepositoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOrganizationRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateOrganizationRepositoryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOrganizationRepositoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateOrganizationRepositoryNoContent creates a UpdateOrganizationRepositoryNoContent with default headers values
func NewUpdateOrganizationRepositoryNoContent() *UpdateOrganizationRepositoryNoContent {
	return &UpdateOrganizationRepositoryNoContent{}
}

/*
UpdateOrganizationRepositoryNoContent describes a response with status code 204, with default header values.

The request has succeeded, no content returned
*/
type UpdateOrganizationRepositoryNoContent struct {
}

// IsSuccess returns true when this update organization repository no content response has a 2xx status code
func (o *UpdateOrganizationRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update organization repository no content response has a 3xx status code
func (o *UpdateOrganizationRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization repository no content response has a 4xx status code
func (o *UpdateOrganizationRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization repository no content response has a 5xx status code
func (o *UpdateOrganizationRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization repository no content response a status code equal to that given
func (o *UpdateOrganizationRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *UpdateOrganizationRepositoryNoContent) Error() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryNoContent ", 204)
}

func (o *UpdateOrganizationRepositoryNoContent) String() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryNoContent ", 204)
}

func (o *UpdateOrganizationRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationRepositoryBadRequest creates a UpdateOrganizationRepositoryBadRequest with default headers values
func NewUpdateOrganizationRepositoryBadRequest() *UpdateOrganizationRepositoryBadRequest {
	return &UpdateOrganizationRepositoryBadRequest{}
}

/*
UpdateOrganizationRepositoryBadRequest describes a response with status code 400, with default header values.

The request sent was not valid
*/
type UpdateOrganizationRepositoryBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization repository bad request response has a 2xx status code
func (o *UpdateOrganizationRepositoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization repository bad request response has a 3xx status code
func (o *UpdateOrganizationRepositoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization repository bad request response has a 4xx status code
func (o *UpdateOrganizationRepositoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization repository bad request response has a 5xx status code
func (o *UpdateOrganizationRepositoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization repository bad request response a status code equal to that given
func (o *UpdateOrganizationRepositoryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateOrganizationRepositoryBadRequest) Error() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationRepositoryBadRequest) String() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOrganizationRepositoryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationRepositoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationRepositoryUnauthorized creates a UpdateOrganizationRepositoryUnauthorized with default headers values
func NewUpdateOrganizationRepositoryUnauthorized() *UpdateOrganizationRepositoryUnauthorized {
	return &UpdateOrganizationRepositoryUnauthorized{}
}

/*
UpdateOrganizationRepositoryUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type UpdateOrganizationRepositoryUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization repository unauthorized response has a 2xx status code
func (o *UpdateOrganizationRepositoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization repository unauthorized response has a 3xx status code
func (o *UpdateOrganizationRepositoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization repository unauthorized response has a 4xx status code
func (o *UpdateOrganizationRepositoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization repository unauthorized response has a 5xx status code
func (o *UpdateOrganizationRepositoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization repository unauthorized response a status code equal to that given
func (o *UpdateOrganizationRepositoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UpdateOrganizationRepositoryUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateOrganizationRepositoryUnauthorized) String() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateOrganizationRepositoryUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationRepositoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationRepositoryForbidden creates a UpdateOrganizationRepositoryForbidden with default headers values
func NewUpdateOrganizationRepositoryForbidden() *UpdateOrganizationRepositoryForbidden {
	return &UpdateOrganizationRepositoryForbidden{}
}

/*
UpdateOrganizationRepositoryForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type UpdateOrganizationRepositoryForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization repository forbidden response has a 2xx status code
func (o *UpdateOrganizationRepositoryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization repository forbidden response has a 3xx status code
func (o *UpdateOrganizationRepositoryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization repository forbidden response has a 4xx status code
func (o *UpdateOrganizationRepositoryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization repository forbidden response has a 5xx status code
func (o *UpdateOrganizationRepositoryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization repository forbidden response a status code equal to that given
func (o *UpdateOrganizationRepositoryForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *UpdateOrganizationRepositoryForbidden) Error() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryForbidden  %+v", 403, o.Payload)
}

func (o *UpdateOrganizationRepositoryForbidden) String() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryForbidden  %+v", 403, o.Payload)
}

func (o *UpdateOrganizationRepositoryForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrganizationRepositoryTooManyRequests creates a UpdateOrganizationRepositoryTooManyRequests with default headers values
func NewUpdateOrganizationRepositoryTooManyRequests() *UpdateOrganizationRepositoryTooManyRequests {
	return &UpdateOrganizationRepositoryTooManyRequests{}
}

/*
UpdateOrganizationRepositoryTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type UpdateOrganizationRepositoryTooManyRequests struct {
}

// IsSuccess returns true when this update organization repository too many requests response has a 2xx status code
func (o *UpdateOrganizationRepositoryTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization repository too many requests response has a 3xx status code
func (o *UpdateOrganizationRepositoryTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization repository too many requests response has a 4xx status code
func (o *UpdateOrganizationRepositoryTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update organization repository too many requests response has a 5xx status code
func (o *UpdateOrganizationRepositoryTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update organization repository too many requests response a status code equal to that given
func (o *UpdateOrganizationRepositoryTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *UpdateOrganizationRepositoryTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryTooManyRequests ", 429)
}

func (o *UpdateOrganizationRepositoryTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryTooManyRequests ", 429)
}

func (o *UpdateOrganizationRepositoryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateOrganizationRepositoryInternalServerError creates a UpdateOrganizationRepositoryInternalServerError with default headers values
func NewUpdateOrganizationRepositoryInternalServerError() *UpdateOrganizationRepositoryInternalServerError {
	return &UpdateOrganizationRepositoryInternalServerError{}
}

/*
UpdateOrganizationRepositoryInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type UpdateOrganizationRepositoryInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update organization repository internal server error response has a 2xx status code
func (o *UpdateOrganizationRepositoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update organization repository internal server error response has a 3xx status code
func (o *UpdateOrganizationRepositoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update organization repository internal server error response has a 4xx status code
func (o *UpdateOrganizationRepositoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update organization repository internal server error response has a 5xx status code
func (o *UpdateOrganizationRepositoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update organization repository internal server error response a status code equal to that given
func (o *UpdateOrganizationRepositoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UpdateOrganizationRepositoryInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOrganizationRepositoryInternalServerError) String() string {
	return fmt.Sprintf("[PUT /repositories/org/{orgName}/{repoName}][%d] updateOrganizationRepositoryInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateOrganizationRepositoryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOrganizationRepositoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
