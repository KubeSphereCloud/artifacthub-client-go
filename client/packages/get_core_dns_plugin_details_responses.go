// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetCoreDNSPluginDetailsReader is a Reader for the GetCoreDNSPluginDetails structure.
type GetCoreDNSPluginDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCoreDNSPluginDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCoreDNSPluginDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCoreDNSPluginDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCoreDNSPluginDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCoreDNSPluginDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCoreDNSPluginDetailsOK creates a GetCoreDNSPluginDetailsOK with default headers values
func NewGetCoreDNSPluginDetailsOK() *GetCoreDNSPluginDetailsOK {
	return &GetCoreDNSPluginDetailsOK{}
}

/*
GetCoreDNSPluginDetailsOK describes a response with status code 200, with default header values.

GetCoreDNSPluginDetailsOK get core Dns plugin details o k
*/
type GetCoreDNSPluginDetailsOK struct {
	Payload *models.CoreDNSPackage
}

// IsSuccess returns true when this get core Dns plugin details o k response has a 2xx status code
func (o *GetCoreDNSPluginDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get core Dns plugin details o k response has a 3xx status code
func (o *GetCoreDNSPluginDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin details o k response has a 4xx status code
func (o *GetCoreDNSPluginDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get core Dns plugin details o k response has a 5xx status code
func (o *GetCoreDNSPluginDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get core Dns plugin details o k response a status code equal to that given
func (o *GetCoreDNSPluginDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCoreDNSPluginDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsOK  %+v", 200, o.Payload)
}

func (o *GetCoreDNSPluginDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsOK  %+v", 200, o.Payload)
}

func (o *GetCoreDNSPluginDetailsOK) GetPayload() *models.CoreDNSPackage {
	return o.Payload
}

func (o *GetCoreDNSPluginDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoreDNSPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoreDNSPluginDetailsNotFound creates a GetCoreDNSPluginDetailsNotFound with default headers values
func NewGetCoreDNSPluginDetailsNotFound() *GetCoreDNSPluginDetailsNotFound {
	return &GetCoreDNSPluginDetailsNotFound{}
}

/*
GetCoreDNSPluginDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetCoreDNSPluginDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get core Dns plugin details not found response has a 2xx status code
func (o *GetCoreDNSPluginDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get core Dns plugin details not found response has a 3xx status code
func (o *GetCoreDNSPluginDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin details not found response has a 4xx status code
func (o *GetCoreDNSPluginDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get core Dns plugin details not found response has a 5xx status code
func (o *GetCoreDNSPluginDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get core Dns plugin details not found response a status code equal to that given
func (o *GetCoreDNSPluginDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCoreDNSPluginDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetCoreDNSPluginDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetCoreDNSPluginDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCoreDNSPluginDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCoreDNSPluginDetailsTooManyRequests creates a GetCoreDNSPluginDetailsTooManyRequests with default headers values
func NewGetCoreDNSPluginDetailsTooManyRequests() *GetCoreDNSPluginDetailsTooManyRequests {
	return &GetCoreDNSPluginDetailsTooManyRequests{}
}

/*
GetCoreDNSPluginDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetCoreDNSPluginDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get core Dns plugin details too many requests response has a 2xx status code
func (o *GetCoreDNSPluginDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get core Dns plugin details too many requests response has a 3xx status code
func (o *GetCoreDNSPluginDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin details too many requests response has a 4xx status code
func (o *GetCoreDNSPluginDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get core Dns plugin details too many requests response has a 5xx status code
func (o *GetCoreDNSPluginDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get core Dns plugin details too many requests response a status code equal to that given
func (o *GetCoreDNSPluginDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetCoreDNSPluginDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsTooManyRequests ", 429)
}

func (o *GetCoreDNSPluginDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsTooManyRequests ", 429)
}

func (o *GetCoreDNSPluginDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCoreDNSPluginDetailsInternalServerError creates a GetCoreDNSPluginDetailsInternalServerError with default headers values
func NewGetCoreDNSPluginDetailsInternalServerError() *GetCoreDNSPluginDetailsInternalServerError {
	return &GetCoreDNSPluginDetailsInternalServerError{}
}

/*
GetCoreDNSPluginDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetCoreDNSPluginDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get core Dns plugin details internal server error response has a 2xx status code
func (o *GetCoreDNSPluginDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get core Dns plugin details internal server error response has a 3xx status code
func (o *GetCoreDNSPluginDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get core Dns plugin details internal server error response has a 4xx status code
func (o *GetCoreDNSPluginDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get core Dns plugin details internal server error response has a 5xx status code
func (o *GetCoreDNSPluginDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get core Dns plugin details internal server error response a status code equal to that given
func (o *GetCoreDNSPluginDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCoreDNSPluginDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoreDNSPluginDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/coredns/{repoName}/{packageName}][%d] getCoreDnsPluginDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCoreDNSPluginDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCoreDNSPluginDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
