// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetHelmPluginDetailsReader is a Reader for the GetHelmPluginDetails structure.
type GetHelmPluginDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHelmPluginDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHelmPluginDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetHelmPluginDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetHelmPluginDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHelmPluginDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHelmPluginDetailsOK creates a GetHelmPluginDetailsOK with default headers values
func NewGetHelmPluginDetailsOK() *GetHelmPluginDetailsOK {
	return &GetHelmPluginDetailsOK{}
}

/*
GetHelmPluginDetailsOK describes a response with status code 200, with default header values.

GetHelmPluginDetailsOK get helm plugin details o k
*/
type GetHelmPluginDetailsOK struct {
	Payload *models.HelmPluginPackage
}

// IsSuccess returns true when this get helm plugin details o k response has a 2xx status code
func (o *GetHelmPluginDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get helm plugin details o k response has a 3xx status code
func (o *GetHelmPluginDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm plugin details o k response has a 4xx status code
func (o *GetHelmPluginDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get helm plugin details o k response has a 5xx status code
func (o *GetHelmPluginDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get helm plugin details o k response a status code equal to that given
func (o *GetHelmPluginDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetHelmPluginDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsOK  %+v", 200, o.Payload)
}

func (o *GetHelmPluginDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsOK  %+v", 200, o.Payload)
}

func (o *GetHelmPluginDetailsOK) GetPayload() *models.HelmPluginPackage {
	return o.Payload
}

func (o *GetHelmPluginDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HelmPluginPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHelmPluginDetailsNotFound creates a GetHelmPluginDetailsNotFound with default headers values
func NewGetHelmPluginDetailsNotFound() *GetHelmPluginDetailsNotFound {
	return &GetHelmPluginDetailsNotFound{}
}

/*
GetHelmPluginDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetHelmPluginDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get helm plugin details not found response has a 2xx status code
func (o *GetHelmPluginDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get helm plugin details not found response has a 3xx status code
func (o *GetHelmPluginDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm plugin details not found response has a 4xx status code
func (o *GetHelmPluginDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get helm plugin details not found response has a 5xx status code
func (o *GetHelmPluginDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get helm plugin details not found response a status code equal to that given
func (o *GetHelmPluginDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetHelmPluginDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetHelmPluginDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetHelmPluginDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHelmPluginDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHelmPluginDetailsTooManyRequests creates a GetHelmPluginDetailsTooManyRequests with default headers values
func NewGetHelmPluginDetailsTooManyRequests() *GetHelmPluginDetailsTooManyRequests {
	return &GetHelmPluginDetailsTooManyRequests{}
}

/*
GetHelmPluginDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetHelmPluginDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get helm plugin details too many requests response has a 2xx status code
func (o *GetHelmPluginDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get helm plugin details too many requests response has a 3xx status code
func (o *GetHelmPluginDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm plugin details too many requests response has a 4xx status code
func (o *GetHelmPluginDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get helm plugin details too many requests response has a 5xx status code
func (o *GetHelmPluginDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get helm plugin details too many requests response a status code equal to that given
func (o *GetHelmPluginDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetHelmPluginDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsTooManyRequests ", 429)
}

func (o *GetHelmPluginDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsTooManyRequests ", 429)
}

func (o *GetHelmPluginDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHelmPluginDetailsInternalServerError creates a GetHelmPluginDetailsInternalServerError with default headers values
func NewGetHelmPluginDetailsInternalServerError() *GetHelmPluginDetailsInternalServerError {
	return &GetHelmPluginDetailsInternalServerError{}
}

/*
GetHelmPluginDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetHelmPluginDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get helm plugin details internal server error response has a 2xx status code
func (o *GetHelmPluginDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get helm plugin details internal server error response has a 3xx status code
func (o *GetHelmPluginDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get helm plugin details internal server error response has a 4xx status code
func (o *GetHelmPluginDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get helm plugin details internal server error response has a 5xx status code
func (o *GetHelmPluginDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get helm plugin details internal server error response a status code equal to that given
func (o *GetHelmPluginDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetHelmPluginDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHelmPluginDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/helm-plugin/{repoName}/{packageName}][%d] getHelmPluginDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHelmPluginDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHelmPluginDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
