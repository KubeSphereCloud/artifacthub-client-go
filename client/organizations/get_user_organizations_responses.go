// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetUserOrganizationsReader is a Reader for the GetUserOrganizations structure.
type GetUserOrganizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserOrganizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserOrganizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserOrganizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserOrganizationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserOrganizationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserOrganizationsOK creates a GetUserOrganizationsOK with default headers values
func NewGetUserOrganizationsOK() *GetUserOrganizationsOK {
	return &GetUserOrganizationsOK{}
}

/*
GetUserOrganizationsOK describes a response with status code 200, with default header values.

GetUserOrganizationsOK get user organizations o k
*/
type GetUserOrganizationsOK struct {

	/* Total number of organizations
	 */
	PaginationTotalCount string

	Payload []*models.Organization
}

// IsSuccess returns true when this get user organizations o k response has a 2xx status code
func (o *GetUserOrganizationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user organizations o k response has a 3xx status code
func (o *GetUserOrganizationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user organizations o k response has a 4xx status code
func (o *GetUserOrganizationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user organizations o k response has a 5xx status code
func (o *GetUserOrganizationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user organizations o k response a status code equal to that given
func (o *GetUserOrganizationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUserOrganizationsOK) Error() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsOK  %+v", 200, o.Payload)
}

func (o *GetUserOrganizationsOK) String() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsOK  %+v", 200, o.Payload)
}

func (o *GetUserOrganizationsOK) GetPayload() []*models.Organization {
	return o.Payload
}

func (o *GetUserOrganizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Pagination-Total-Count
	hdrPaginationTotalCount := response.GetHeader("Pagination-Total-Count")

	if hdrPaginationTotalCount != "" {
		o.PaginationTotalCount = hdrPaginationTotalCount
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserOrganizationsUnauthorized creates a GetUserOrganizationsUnauthorized with default headers values
func NewGetUserOrganizationsUnauthorized() *GetUserOrganizationsUnauthorized {
	return &GetUserOrganizationsUnauthorized{}
}

/*
GetUserOrganizationsUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type GetUserOrganizationsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user organizations unauthorized response has a 2xx status code
func (o *GetUserOrganizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user organizations unauthorized response has a 3xx status code
func (o *GetUserOrganizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user organizations unauthorized response has a 4xx status code
func (o *GetUserOrganizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user organizations unauthorized response has a 5xx status code
func (o *GetUserOrganizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user organizations unauthorized response a status code equal to that given
func (o *GetUserOrganizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetUserOrganizationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserOrganizationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUserOrganizationsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserOrganizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserOrganizationsTooManyRequests creates a GetUserOrganizationsTooManyRequests with default headers values
func NewGetUserOrganizationsTooManyRequests() *GetUserOrganizationsTooManyRequests {
	return &GetUserOrganizationsTooManyRequests{}
}

/*
GetUserOrganizationsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetUserOrganizationsTooManyRequests struct {
}

// IsSuccess returns true when this get user organizations too many requests response has a 2xx status code
func (o *GetUserOrganizationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user organizations too many requests response has a 3xx status code
func (o *GetUserOrganizationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user organizations too many requests response has a 4xx status code
func (o *GetUserOrganizationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user organizations too many requests response has a 5xx status code
func (o *GetUserOrganizationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get user organizations too many requests response a status code equal to that given
func (o *GetUserOrganizationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetUserOrganizationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsTooManyRequests ", 429)
}

func (o *GetUserOrganizationsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsTooManyRequests ", 429)
}

func (o *GetUserOrganizationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserOrganizationsInternalServerError creates a GetUserOrganizationsInternalServerError with default headers values
func NewGetUserOrganizationsInternalServerError() *GetUserOrganizationsInternalServerError {
	return &GetUserOrganizationsInternalServerError{}
}

/*
GetUserOrganizationsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetUserOrganizationsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get user organizations internal server error response has a 2xx status code
func (o *GetUserOrganizationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user organizations internal server error response has a 3xx status code
func (o *GetUserOrganizationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user organizations internal server error response has a 4xx status code
func (o *GetUserOrganizationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user organizations internal server error response has a 5xx status code
func (o *GetUserOrganizationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user organizations internal server error response a status code equal to that given
func (o *GetUserOrganizationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUserOrganizationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserOrganizationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /orgs/user][%d] getUserOrganizationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserOrganizationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserOrganizationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
