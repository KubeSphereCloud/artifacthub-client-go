// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// AddOrganizationMemberReader is a Reader for the AddOrganizationMember structure.
type AddOrganizationMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddOrganizationMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddOrganizationMemberCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddOrganizationMemberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddOrganizationMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAddOrganizationMemberTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddOrganizationMemberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddOrganizationMemberCreated creates a AddOrganizationMemberCreated with default headers values
func NewAddOrganizationMemberCreated() *AddOrganizationMemberCreated {
	return &AddOrganizationMemberCreated{}
}

/*
AddOrganizationMemberCreated describes a response with status code 201, with default header values.

The request has succeeded and has led to the creation of a resource
*/
type AddOrganizationMemberCreated struct {
}

// IsSuccess returns true when this add organization member created response has a 2xx status code
func (o *AddOrganizationMemberCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add organization member created response has a 3xx status code
func (o *AddOrganizationMemberCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization member created response has a 4xx status code
func (o *AddOrganizationMemberCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add organization member created response has a 5xx status code
func (o *AddOrganizationMemberCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization member created response a status code equal to that given
func (o *AddOrganizationMemberCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddOrganizationMemberCreated) Error() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberCreated ", 201)
}

func (o *AddOrganizationMemberCreated) String() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberCreated ", 201)
}

func (o *AddOrganizationMemberCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOrganizationMemberUnauthorized creates a AddOrganizationMemberUnauthorized with default headers values
func NewAddOrganizationMemberUnauthorized() *AddOrganizationMemberUnauthorized {
	return &AddOrganizationMemberUnauthorized{}
}

/*
AddOrganizationMemberUnauthorized describes a response with status code 401, with default header values.

Valid authentication credentials not provided
*/
type AddOrganizationMemberUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this add organization member unauthorized response has a 2xx status code
func (o *AddOrganizationMemberUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization member unauthorized response has a 3xx status code
func (o *AddOrganizationMemberUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization member unauthorized response has a 4xx status code
func (o *AddOrganizationMemberUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add organization member unauthorized response has a 5xx status code
func (o *AddOrganizationMemberUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization member unauthorized response a status code equal to that given
func (o *AddOrganizationMemberUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddOrganizationMemberUnauthorized) Error() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberUnauthorized  %+v", 401, o.Payload)
}

func (o *AddOrganizationMemberUnauthorized) String() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberUnauthorized  %+v", 401, o.Payload)
}

func (o *AddOrganizationMemberUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrganizationMemberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOrganizationMemberForbidden creates a AddOrganizationMemberForbidden with default headers values
func NewAddOrganizationMemberForbidden() *AddOrganizationMemberForbidden {
	return &AddOrganizationMemberForbidden{}
}

/*
AddOrganizationMemberForbidden describes a response with status code 403, with default header values.

The user does not have permission to perform the requested operation
*/
type AddOrganizationMemberForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this add organization member forbidden response has a 2xx status code
func (o *AddOrganizationMemberForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization member forbidden response has a 3xx status code
func (o *AddOrganizationMemberForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization member forbidden response has a 4xx status code
func (o *AddOrganizationMemberForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add organization member forbidden response has a 5xx status code
func (o *AddOrganizationMemberForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization member forbidden response a status code equal to that given
func (o *AddOrganizationMemberForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *AddOrganizationMemberForbidden) Error() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberForbidden  %+v", 403, o.Payload)
}

func (o *AddOrganizationMemberForbidden) String() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberForbidden  %+v", 403, o.Payload)
}

func (o *AddOrganizationMemberForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrganizationMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddOrganizationMemberTooManyRequests creates a AddOrganizationMemberTooManyRequests with default headers values
func NewAddOrganizationMemberTooManyRequests() *AddOrganizationMemberTooManyRequests {
	return &AddOrganizationMemberTooManyRequests{}
}

/*
AddOrganizationMemberTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type AddOrganizationMemberTooManyRequests struct {
}

// IsSuccess returns true when this add organization member too many requests response has a 2xx status code
func (o *AddOrganizationMemberTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization member too many requests response has a 3xx status code
func (o *AddOrganizationMemberTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization member too many requests response has a 4xx status code
func (o *AddOrganizationMemberTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this add organization member too many requests response has a 5xx status code
func (o *AddOrganizationMemberTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this add organization member too many requests response a status code equal to that given
func (o *AddOrganizationMemberTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *AddOrganizationMemberTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberTooManyRequests ", 429)
}

func (o *AddOrganizationMemberTooManyRequests) String() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberTooManyRequests ", 429)
}

func (o *AddOrganizationMemberTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddOrganizationMemberInternalServerError creates a AddOrganizationMemberInternalServerError with default headers values
func NewAddOrganizationMemberInternalServerError() *AddOrganizationMemberInternalServerError {
	return &AddOrganizationMemberInternalServerError{}
}

/*
AddOrganizationMemberInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type AddOrganizationMemberInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add organization member internal server error response has a 2xx status code
func (o *AddOrganizationMemberInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add organization member internal server error response has a 3xx status code
func (o *AddOrganizationMemberInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add organization member internal server error response has a 4xx status code
func (o *AddOrganizationMemberInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add organization member internal server error response has a 5xx status code
func (o *AddOrganizationMemberInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add organization member internal server error response a status code equal to that given
func (o *AddOrganizationMemberInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddOrganizationMemberInternalServerError) Error() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOrganizationMemberInternalServerError) String() string {
	return fmt.Sprintf("[POST /orgs/{orgName}/member/{userAlias}][%d] addOrganizationMemberInternalServerError  %+v", 500, o.Payload)
}

func (o *AddOrganizationMemberInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddOrganizationMemberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
