// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/KubeSphereCloud/artifacthub-client-go/models"
)

// GetOPAPoliciesVersionDetailsReader is a Reader for the GetOPAPoliciesVersionDetails structure.
type GetOPAPoliciesVersionDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOPAPoliciesVersionDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOPAPoliciesVersionDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetOPAPoliciesVersionDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOPAPoliciesVersionDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOPAPoliciesVersionDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOPAPoliciesVersionDetailsOK creates a GetOPAPoliciesVersionDetailsOK with default headers values
func NewGetOPAPoliciesVersionDetailsOK() *GetOPAPoliciesVersionDetailsOK {
	return &GetOPAPoliciesVersionDetailsOK{}
}

/*
GetOPAPoliciesVersionDetailsOK describes a response with status code 200, with default header values.

GetOPAPoliciesVersionDetailsOK get o p a policies version details o k
*/
type GetOPAPoliciesVersionDetailsOK struct {
	Payload *models.OPAPackage
}

// IsSuccess returns true when this get o p a policies version details o k response has a 2xx status code
func (o *GetOPAPoliciesVersionDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get o p a policies version details o k response has a 3xx status code
func (o *GetOPAPoliciesVersionDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies version details o k response has a 4xx status code
func (o *GetOPAPoliciesVersionDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o p a policies version details o k response has a 5xx status code
func (o *GetOPAPoliciesVersionDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get o p a policies version details o k response a status code equal to that given
func (o *GetOPAPoliciesVersionDetailsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetOPAPoliciesVersionDetailsOK) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetOPAPoliciesVersionDetailsOK) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsOK  %+v", 200, o.Payload)
}

func (o *GetOPAPoliciesVersionDetailsOK) GetPayload() *models.OPAPackage {
	return o.Payload
}

func (o *GetOPAPoliciesVersionDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OPAPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOPAPoliciesVersionDetailsNotFound creates a GetOPAPoliciesVersionDetailsNotFound with default headers values
func NewGetOPAPoliciesVersionDetailsNotFound() *GetOPAPoliciesVersionDetailsNotFound {
	return &GetOPAPoliciesVersionDetailsNotFound{}
}

/*
GetOPAPoliciesVersionDetailsNotFound describes a response with status code 404, with default header values.

The requested resource was not found
*/
type GetOPAPoliciesVersionDetailsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o p a policies version details not found response has a 2xx status code
func (o *GetOPAPoliciesVersionDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o p a policies version details not found response has a 3xx status code
func (o *GetOPAPoliciesVersionDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies version details not found response has a 4xx status code
func (o *GetOPAPoliciesVersionDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o p a policies version details not found response has a 5xx status code
func (o *GetOPAPoliciesVersionDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get o p a policies version details not found response a status code equal to that given
func (o *GetOPAPoliciesVersionDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetOPAPoliciesVersionDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetOPAPoliciesVersionDetailsNotFound) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsNotFound  %+v", 404, o.Payload)
}

func (o *GetOPAPoliciesVersionDetailsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOPAPoliciesVersionDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOPAPoliciesVersionDetailsTooManyRequests creates a GetOPAPoliciesVersionDetailsTooManyRequests with default headers values
func NewGetOPAPoliciesVersionDetailsTooManyRequests() *GetOPAPoliciesVersionDetailsTooManyRequests {
	return &GetOPAPoliciesVersionDetailsTooManyRequests{}
}

/*
GetOPAPoliciesVersionDetailsTooManyRequests describes a response with status code 429, with default header values.

The user has sent too many requests in a given amount of time
*/
type GetOPAPoliciesVersionDetailsTooManyRequests struct {
}

// IsSuccess returns true when this get o p a policies version details too many requests response has a 2xx status code
func (o *GetOPAPoliciesVersionDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o p a policies version details too many requests response has a 3xx status code
func (o *GetOPAPoliciesVersionDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies version details too many requests response has a 4xx status code
func (o *GetOPAPoliciesVersionDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o p a policies version details too many requests response has a 5xx status code
func (o *GetOPAPoliciesVersionDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get o p a policies version details too many requests response a status code equal to that given
func (o *GetOPAPoliciesVersionDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetOPAPoliciesVersionDetailsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsTooManyRequests ", 429)
}

func (o *GetOPAPoliciesVersionDetailsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsTooManyRequests ", 429)
}

func (o *GetOPAPoliciesVersionDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOPAPoliciesVersionDetailsInternalServerError creates a GetOPAPoliciesVersionDetailsInternalServerError with default headers values
func NewGetOPAPoliciesVersionDetailsInternalServerError() *GetOPAPoliciesVersionDetailsInternalServerError {
	return &GetOPAPoliciesVersionDetailsInternalServerError{}
}

/*
GetOPAPoliciesVersionDetailsInternalServerError describes a response with status code 500, with default header values.

The server encountered an unexpected condition that prevented it from fulfilling the request
*/
type GetOPAPoliciesVersionDetailsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o p a policies version details internal server error response has a 2xx status code
func (o *GetOPAPoliciesVersionDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o p a policies version details internal server error response has a 3xx status code
func (o *GetOPAPoliciesVersionDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o p a policies version details internal server error response has a 4xx status code
func (o *GetOPAPoliciesVersionDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o p a policies version details internal server error response has a 5xx status code
func (o *GetOPAPoliciesVersionDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get o p a policies version details internal server error response a status code equal to that given
func (o *GetOPAPoliciesVersionDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetOPAPoliciesVersionDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOPAPoliciesVersionDetailsInternalServerError) String() string {
	return fmt.Sprintf("[GET /packages/opa/{repoName}/{packageName}/{version}][%d] getOPAPoliciesVersionDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOPAPoliciesVersionDetailsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOPAPoliciesVersionDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
